# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build-client:
    docker:
      # specify the version you desire here
      - image: circleci/node:11

    working_directory: ~/repo
    #    parallelism: 2
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - run: |
          cd client
          CLIENT_TAG=1.0
          IMAGE_CLIENT_NAME=montepouli-client
          docker build -t $DOMAIN/$IMAGE_CLIENT_NAME:$CLIENT_TAG .

          docker build -f DockerfileE2E . -t $DOMAIN/$IMAGE_CLIENT_NAME:$CLIENT_TAG .

      - deploy:
          command: |
            CLIENT_TAG=1.0
            IMAGE_CLIENT_NAME=montepouli-client
            docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD
            docker push $DOMAIN/$IMAGE_CLIENT_NAME:$CLIENT_TAG

  build-server:
    docker:
      # specify the version you desire here
      - image: circleci/node:11

    working_directory: ~/repo
    #    parallelism: 2
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - run: |
          cd server
          SERVER_TAG=1.0
          IMAGE_SERVER_NAME=montepouli-server
          docker build -t $DOMAIN/$IMAGE_SERVER_NAME:$SERVER_TAG .

      - deploy:
          command: |
            SERVER_TAG=1.0
            IMAGE_SERVER_NAME=montepouli-server
            docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD
            docker push $DOMAIN/$IMAGE_SERVER_NAME:$SERVER_TAG

  build-e2e-client:
    docker:
      # specify the version you desire here
      - image: circleci/node:11

    working_directory: ~/repo
    #    parallelism: 2
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - run: |
          cd client
          CLIENT_TAG=1.0
          IMAGE_CLIENT_NAME=montepouli-client-e2e
          docker build -f DockerfileE2E . -t $DOMAIN/$IMAGE_CLIENT_NAME:$CLIENT_TAG

      - deploy:
          command: |
            CLIENT_TAG=1.0
            IMAGE_CLIENT_NAME=montepouli-client-e2e
            docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD
            docker push $DOMAIN/$IMAGE_CLIENT_NAME:$CLIENT_TAG
  test:
    docker:
      - image: circleci/node:12-browsers

      - image: circleci/mongo:4.1.10
        environment:
          - MONGO_INITDB_ROOT_USERNAME=root
          - MONGO_INITDB_ROOT_PASSWORD=example

      - image: montepoeli.club/montepouli-server:1.0
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASSWORD
        environment:
          - MONGO_USERNAME=root
          - MONGO_PASSWORD=example
          - SERVER_SECRET=secret01
          - ENV=dev
          - MONGO_DNS_NAME=localhost
        command: sh -c 'npm run start:dev'

      - image: montepoeli.club/montepouli-client-e2e:1.0
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASSWORD
    #        command: sh -c 'npm run start:dev'

    #      - image: montepoeli.club/montepoeli-client-e2e:0.1
    #        auth:
    #          username: $DOCKER_USER
    #          password: $DOCKER_PASSWORD
    #        command: sh -c 'sleep 20 && npm run protractor'

    working_directory: ~/repo

    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - run: cd client
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-client-dependencies-{{ checksum "client/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-client-dependencies-

      - run: |
          cd client
          npm install

      - save_cache:
          paths:
            - client/node_modules
          key: v1-client-dependencies-{{ checksum "client/package.json" }}

      - run: |
          cd client
          npm run protractor

  retag-images:
    docker:
      # specify the version you desire here
      - image: circleci/node:11

    working_directory: ~/repo
    #    parallelism: 2
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - run: |
          cd client
          CLIENT_TAG=1.0
          IMAGE_CLIENT_NAME=montepouli-client

          TESTED_CLIENT_TAG=1.0-e2e

          docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD
          docker pull $DOMAIN/$IMAGE_CLIENT_NAME:$CLIENT_TAG
          docker tag $DOMAIN/$IMAGE_CLIENT_NAME:$CLIENT_TAG $DOMAIN/$IMAGE_CLIENT_NAME:TESTED_CLIENT_TAG


      - deploy:
          command: |
            TESTED_CLIENT_TAG=1.0-e2e
            IMAGE_CLIENT_NAME=montepouli-client

            docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD
            docker push $DOMAIN/$IMAGE_CLIENT_NAME:TESTED_CLIENT_TAG

#      - run: |
#          CLIENT_TAG=1.0
#          IMAGE_CLIENT_NAME=montepouli-client
#          docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD
#          docker push $DOMAIN/$IMAGE_CLIENT_NAME:$CLIENT_TAG

workflows:
  version: 2
  build_and_test:
    jobs:
      #      - build-client
      #      - build-server
      #      - build-e2e-client
      - test
      #          requires:
      #            - build-e2e-client
      #            - build-client
      #            - build-server
      #
#             - build-client
      - retag-images:
        requires:
          - test
#      - deploy:
#        command: |
#          docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD
#          docker push $DOMAIN/$IMAGE_CLIENT_NAME:$CLIENT_TAG
#
#      - deploy:
#        command: |
#          docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD
#          docker push $DOMAIN/$IMAGE_SERVER_NAME:$SERVER_TAG

#  test:
#    docker:
#      # Specify service dependencies here if necessary
#      # CircleCI maintains a library of pre-built images
#      # documented at https://circleci.com/docs/2.0/circleci-images/
#      # - image: circleci/mongo:3.4.4
#
#    steps:
#      - checkout
#      - setup_remote_docker:
#          docker_layer_caching: true
#
#      - run: |
#          echo hello
#
#  deploy:
#    docker:
#      - image
#    - run: |
#        cd client
#        STORYBOOK_TAG=1.0
#        IMAGE_STORYBOOK_NAME=montepouli-storybook
#        docker build -f StorybookDockerfile -t $DOMAIN/$IMAGE_STORYBOOK_NAME:$STORYBOOK_TAG .
#        docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD
#        docker push $DOMAIN/$IMAGE_STORYBOOK_NAME:$STORYBOOK_TAG

#    - run: |
#        sudo apt-get update && sudo apt-get install sshpass
#
#    - run: |
#        echo $SERVER_PASSWORD
#        echo 'yes' | ssh $SERVER_USERNAME@$SERVER_IP
#        sshpass -p $SERVER_PASSWORD ssh $SERVER_USERNAME@$SERVER_IP 'bash -s' cd node_project/ && npm run update-images && exit
#
#        && npm run restart-core

