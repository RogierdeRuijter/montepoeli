version: 2
jobs:
  save-version:
    docker:
      - image: circleci/node:11
        environment:
          WORKFLOW_ID: $CIRCLE_WORKFLOW_ID

    working_directory: ~/repo
    steps:
      - checkout
      - run:
          command: |
            cd client
            grep '"version":' package.json | cut -d\" -f4 > /tmp/client-version.txt

      - run:
          command: |
            cd client
            grep '"version":' package.json | cut -d\" -f4 > /tmp/server-version.txt

      - store_artifacts:
          path: /tmp/client-version.txt

      - store_artifacts:
          path: /tmp/server-version.txt

      - persist_to_workspace:
          root: /tmp
          paths:
            - client-version.txt
            - server-version.txt
            
  build-client-base:
    docker:
      - image: circleci/node:11

    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - attach_workspace:
          at: /tmp

      - run:
          name: Setup Environment Variables
          command: |
            echo "export CLIENT_TAG=$(cat /tmp/client-version.txt)" >> $BASH_ENV

      - run:
          command: |
            IMAGE_CLIENT_NAME=montepouli-client
            cd client
            docker build -t $DOMAIN/$IMAGE_CLIENT_NAME:$CLIENT_TAG .
      - deploy:
          command: |
            IMAGE_CLIENT_NAME=montepouli-client
            docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD
            docker push $DOMAIN/$IMAGE_CLIENT_NAME:$CLIENT_TAG

  build-server:
    docker:
      - image: circleci/node:11

    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - attach_workspace:
          at: /tmp

      - run:
          name: Setup Environment Variables
          command: |
            echo "export SERVER_TAG=$(cat /tmp/server-version.txt)" >> $BASH_ENV

      - run: |
          cd server
          IMAGE_SERVER_NAME=montepouli-server
          docker build -t $DOMAIN/$IMAGE_SERVER_NAME:$SERVER_TAG .

      - deploy:
          command: |
            IMAGE_SERVER_NAME=montepouli-server
            docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD
            docker push $DOMAIN/$IMAGE_SERVER_NAME:$SERVER_TAG

  swap-client-config-e2e:
    docker:
      - image: circleci/node:11

    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - attach_workspace:
          at: /tmp

      - run:
          name: Setup Environment Variables
          command: |
            echo "export CLIENT_TAG=$(cat /tmp/client-version.txt)" >> $BASH_ENV

      - run:
          command: |
            docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD

      - run:
          command: |
            cd client
            IMAGE_CLIENT_NAME=montepouli-client-e2e
            docker build -f Dockerfile.configured . -t $DOMAIN/$IMAGE_CLIENT_NAME:$CLIENT_TAG --build-arg CLIENT_BASE_IMAGE_NAME=montepoeli.club/montepouli-client --build-arg CLIENT_BASE_IMAGE_TAG=$CLIENT_TAG --build-arg CLIENT_TYPE=e2e

      - deploy:
          command: |
            IMAGE_CLIENT_NAME=montepouli-client-e2e
            docker push $DOMAIN/$IMAGE_CLIENT_NAME:$CLIENT_TAG

  e2e-test:
    machine:
      image: circleci/classic:201808-01
    working_directory: ~/repo
    environment:
      - CLIENT_BASE_IMAGE_NAME: montepoeli.club/montepouli-client-e2e
      - SERVER_IMAGE_NAME: montepoeli.club/montepouli-server
      - CLIENT_TYPE: e2e
    steps:
      - checkout

      - attach_workspace:
          at: /tmp

      - run:
          name: Setup Environment Variables
          command: |
            echo "export CLIENT_BASE_IMAGE_TAG=$(cat /tmp/client-version.txt)" >> $BASH_ENV
            echo "export SERVER_IMAGE_TAG=$(cat /tmp/server-version.txt)" >> $BASH_ENV
      - run: sudo curl -L "https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      - run: sudo chmod +x /usr/local/bin/docker-compose
      - run: docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD
      - run: npm run start:e2e-environment-build-server

  swap-client-config:
    docker:
      - image: circleci/node:11

    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - attach_workspace:
          at: /tmp

      - run:
          name: Setup Environment Variables
          command: |
            echo "export CLIENT_TAG=$(cat /tmp/client-version.txt)" >> $BASH_ENV

      - run:
          command: |
            docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD

      - run:
          command: |
            IMAGE_CLIENT_NAME=montepouli-client
            TESTED_CLIENT_TAG=$CLIENT_TAG-e2e
            cd client
            docker build -f Dockerfile.configured -t $DOMAIN/$IMAGE_CLIENT_NAME:$TESTED_CLIENT_TAG . --build-arg CLIENT_BASE_IMAGE_NAME=montepoeli.club/montepouli-client-e2e --build-arg CLIENT_BASE_IMAGE_TAG=$CLIENT_TAG --build-arg CLIENT_TYPE=server

      - deploy:
          command: |
            TESTED_CLIENT_TAG=$CLIENT_TAG-e2e
            IMAGE_CLIENT_NAME=montepouli-client
            docker push $DOMAIN/$IMAGE_CLIENT_NAME:$TESTED_CLIENT_TAG

  retag-server-image:
    docker:
      - image: circleci/node:11

    working_directory: ~/repo
    steps:
      - setup_remote_docker:
          docker_layer_caching: true

      - attach_workspace:
          at: /tmp
          

      - run:
          name: Setup Environment Variables
          command: |
            echo "export SERVER_TAG=$(cat /tmp/server-version.txt)" >> $BASH_ENV

      - run: docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD

      - run: |
          IMAGE_SERVER_NAME=montepouli-server
          TESTED_SERVER_TAG=$SERVER_TAG-e2e

          docker pull $DOMAIN/$IMAGE_SERVER_NAME:$SERVER_TAG
          docker tag $DOMAIN/$IMAGE_SERVER_NAME:$SERVER_TAG $DOMAIN/$IMAGE_SERVER_NAME:$TESTED_SERVER_TAG

      - deploy:
          command: |
            TESTED_SERVER_TAG=$SERVER_TAG-e2e
            IMAGE_SERVER_NAME=montepouli-server

            docker push $DOMAIN/$IMAGE_SERVER_NAME:$TESTED_SERVER_TAG

workflows:
  version: 2
  build_and_test:
    jobs:
      - save-version
      - build-client-base:
          requires:
            - save-version
      - build-server:
          requires:
            - save-version
      - swap-client-config-e2e:
          requires:
            - build-client-base
          filters:
            branches:
              only: 
                - master
                - /depfu.*/
                - /dependabot.*/
      - e2e-test:
          requires:
            - swap-client-config-e2e
            - build-server
          filters:
            branches:
              only: 
                - master
                - /depfu.*/
                - /dependabot.*/
      - swap-client-config:
          requires:
            - build-client-base
            - e2e-test
          filters:
            branches:
              only: master
      - retag-server-image:
          requires:
            - e2e-test
          filters:
            branches:
              only: master
