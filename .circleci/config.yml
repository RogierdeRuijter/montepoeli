# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build-client-base:
    docker:
      - image: circleci/node:11

    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          command: |
            CLIENT_TAG=1.1
            IMAGE_CLIENT_NAME=montepouli-client
            cd client
            docker build -t $DOMAIN/$IMAGE_CLIENT_NAME:$CLIENT_TAG .

      - deploy:
          command: |
            CLIENT_TAG=1.1
            IMAGE_CLIENT_NAME=montepouli-client
            docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD
            docker push $DOMAIN/$IMAGE_CLIENT_NAME:$CLIENT_TAG

  build-server:
    docker:
      - image: circleci/node:11

    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - run: |
          cd server
          SERVER_TAG=1.1
          IMAGE_SERVER_NAME=montepouli-server
          docker build -t $DOMAIN/$IMAGE_SERVER_NAME:$SERVER_TAG .

      - deploy:
          command: |
            SERVER_TAG=1.1
            IMAGE_SERVER_NAME=montepouli-server
            docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD
            docker push $DOMAIN/$IMAGE_SERVER_NAME:$SERVER_TAG

  swap-client-config-e2e:
    docker:
      - image: circleci/node:11

    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          command: |
            docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD

      - run:
          command: |
            cd client
            CLIENT_TAG=1.1
            IMAGE_CLIENT_NAME=montepouli-client-e2e
            docker build -f Dockerfile.configured . -t $DOMAIN/$IMAGE_CLIENT_NAME:$CLIENT_TAG --build-arg CLIENT_BASE_IMAGE_NAME=montepoeli.club/montepouli-client --build-arg CLIENT_BASE_IMAGE_TAG=1.1 --build-arg CLIENT_TYPE=e2e

      - deploy:
          command: |
            CLIENT_TAG=1.1
            IMAGE_CLIENT_NAME=montepouli-client-e2e
            docker push $DOMAIN/$IMAGE_CLIENT_NAME:$CLIENT_TAG

  build-storybook:
    docker:
      - image: circleci/node:11

    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: |
          cd client
          STORYBOOK_TAG=1.0
          IMAGE_STORYBOOK_NAME=montepouli-storybook
          docker build -f Dockerfile.storybook -t $DOMAIN/$IMAGE_STORYBOOK_NAME:$STORYBOOK_TAG .

      - deploy:
          command: |
            cd client
            STORYBOOK_TAG=1.0
            IMAGE_STORYBOOK_NAME=montepouli-storybook

            docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD
            docker push $DOMAIN/$IMAGE_STORYBOOK_NAME:$STORYBOOK_TAG

  e2e-test:
    machine:
      image: circleci/classic:201808-01
    working_directory: ~/repo # Default working directory, where your project will be cloned
    environment:
      - CLIENT_BASE_IMAGE_NAME: montepoeli.club/montepouli-client-e2e
      - CLIENT_BASE_IMAGE_TAG: 1.1
      - SERVER_IMAGE_NAME: montepoeli.club/montepouli-server
      - SERVER_IMAGE_TAG: 1.1
      - CLIENT_TYPE: e2e
    steps:
      - checkout
      - run: docker-compose -v
      - run: docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD
      - run: npm run start:e2e-environment-build-server

  swap-client-config:
    docker:
      - image: circleci/node:11

    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          command: |
            docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD

      - run:
          command: |
            cd client
            IMAGE_CLIENT_NAME=montepouli-client
            TESTED_CLIENT_TAG=1.1-e2e
            docker build -f Dockerfile.configured -t $DOMAIN/$IMAGE_CLIENT_NAME:$TESTED_CLIENT_TAG . --build-arg CLIENT_BASE_IMAGE_NAME=montepoeli.club/montepouli-client-e2e --build-arg CLIENT_BASE_IMAGE_TAG=1.1 --build-arg CLIENT_TYPE=server

      - deploy:
          command: |
            TESTED_CLIENT_TAG=1.1-e2e
            IMAGE_CLIENT_NAME=montepouli-client
            docker push $DOMAIN/$IMAGE_CLIENT_NAME:$TESTED_CLIENT_TAG

  retag-server-image:
    docker:
      - image: circleci/node:11

    working_directory: ~/repo
    steps:
      - setup_remote_docker:
          docker_layer_caching: true

      - run: docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD

      - run: |
          SERVER_TAG=1.1
          IMAGE_SERVER_NAME=montepouli-server
          TESTED_SERVER_TAG=1.1-e2e

          docker pull $DOMAIN/$IMAGE_SERVER_NAME:$SERVER_TAG
          docker tag $DOMAIN/$IMAGE_SERVER_NAME:$SERVER_TAG $DOMAIN/$IMAGE_SERVER_NAME:$TESTED_SERVER_TAG

      - deploy:
          command: |
            TESTED_SERVER_TAG=1.1-e2e
            IMAGE_SERVER_NAME=montepouli-server

            docker push $DOMAIN/$IMAGE_SERVER_NAME:$TESTED_SERVER_TAG

workflows:
  version: 2
  build_and_test:
    jobs:
#      - build-client-base
#      - build-server
#      - swap-client-config-e2e:
#          requires:
#            - build-client-base
      - e2e-test
#          requires:
#            - swap-client-config-e2e
#            - build-server
      - build-storybook:
          filters:
            branches:
              only:
                - /feature-.*/
      - swap-client-config:
#          requires:
#            - build-client-base
#            - e2e-test
          filters:
            branches:
              only: master
      - retag-server-image:
          requires:
            - e2e-test
          filters:
            branches:
              only: master
