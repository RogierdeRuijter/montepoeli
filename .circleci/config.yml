# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build-client:
    docker:
      - image: circleci/node:11

    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - run: |
          cd client
          CLIENT_TAG=1.1
          IMAGE_CLIENT_NAME=montepouli-client
          docker build -t $DOMAIN/$IMAGE_CLIENT_NAME:$CLIENT_TAG .

      - deploy:
          command: |
            CLIENT_TAG=1.1
            IMAGE_CLIENT_NAME=montepouli-client
            docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD
            docker push $DOMAIN/$IMAGE_CLIENT_NAME:$CLIENT_TAG

  build-server:
    docker:
      - image: circleci/node:11

    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - run: |
          cd server
          SERVER_TAG=1.1
          IMAGE_SERVER_NAME=montepouli-server
          docker build -t $DOMAIN/$IMAGE_SERVER_NAME:$SERVER_TAG .

      - deploy:
          command: |
            SERVER_TAG=1.1
            IMAGE_SERVER_NAME=montepouli-server
            docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD
            docker push $DOMAIN/$IMAGE_SERVER_NAME:$SERVER_TAG

  build-e2e-client:
    docker:
      - image: circleci/node:11

    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - run: |
          cd client
          CLIENT_TAG=1.1
          IMAGE_CLIENT_NAME=montepouli-client-e2e
          docker build -f DockerfileE2EClient . -t $DOMAIN/$IMAGE_CLIENT_NAME:$CLIENT_TAG

      - deploy:
          command: |
            CLIENT_TAG=1.1
            IMAGE_CLIENT_NAME=montepouli-client-e2e
            docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD
            docker push $DOMAIN/$IMAGE_CLIENT_NAME:$CLIENT_TAG

  build-storybook:
    docker:
      - image: circleci/node:11

    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: |
          cd client
          STORYBOOK_TAG=1.0
          IMAGE_STORYBOOK_NAME=montepouli-storybook
          docker build -f StorybookDockerfile -t $DOMAIN/$IMAGE_STORYBOOK_NAME:$STORYBOOK_TAG .

      - deploy:
          command: |
            cd client
            STORYBOOK_TAG=1.0
            IMAGE_STORYBOOK_NAME=montepouli-storybook

            docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD
            docker push $DOMAIN/$IMAGE_STORYBOOK_NAME:$STORYBOOK_TAG

  e2e-test:
    docker:
      - image: circleci/node:12-browsers

      - image: circleci/mongo:4.1.10
        environment:
          - MONGO_INITDB_ROOT_USERNAME=root
          - MONGO_INITDB_ROOT_PASSWORD=example

      - image: montepoeli.club/montepouli-server:1.1
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASSWORD
        environment:
          - MONGO_USERNAME=root
          - MONGO_PASSWORD=example
          - SERVER_SECRET=secret01
          - ENV=dev
          - MONGO_DNS_NAME=localhost
        command: sh -c 'npm run start:dev'

      - image: montepoeli.club/montepouli-client-e2e:1.1
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASSWORD

    working_directory: ~/repo

    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - run: cd client
      - restore_cache:
          keys:
            - v1-client-dependencies-{{ checksum "e2e/package.json" }}
            - v1-client-dependencies-

      - run: |
          cd client
          npm i --prefix=e2e

      - save_cache:
          paths:
            - client/node_modules
          key: v1-client-dependencies-{{ checksum "e2e/package.json" }}

      - run: |
          cd client
          npm run protractor:build-server

  retag-images:
    docker:
      - image: circleci/node:11

    working_directory: ~/repo
    steps:
      - setup_remote_docker:
          docker_layer_caching: true

      - run: docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD

      - run: |
          CLIENT_TAG=1.1
          IMAGE_CLIENT_NAME=montepouli-client

          TESTED_CLIENT_TAG=1.1-e2e

          docker pull $DOMAIN/$IMAGE_CLIENT_NAME:$CLIENT_TAG
          docker tag $DOMAIN/$IMAGE_CLIENT_NAME:$CLIENT_TAG $DOMAIN/$IMAGE_CLIENT_NAME:$TESTED_CLIENT_TAG

      - deploy:
          command: |
            TESTED_CLIENT_TAG=1.1-e2e
            IMAGE_CLIENT_NAME=montepouli-client

            docker push $DOMAIN/$IMAGE_CLIENT_NAME:$TESTED_CLIENT_TAG

      - run: |
          SERVER_TAG=1.1
          IMAGE_SERVER_NAME=montepouli-server
          TESTED_SERVER_TAG=1.1-e2e

          docker pull $DOMAIN/$IMAGE_SERVER_NAME:$SERVER_TAG
          docker tag $DOMAIN/$IMAGE_SERVER_NAME:$SERVER_TAG $DOMAIN/$IMAGE_SERVER_NAME:$TESTED_SERVER_TAG

      - deploy:
          command: |
            TESTED_SERVER_TAG=1.1-e2e
            IMAGE_SERVER_NAME=montepouli-server

            docker push $DOMAIN/$IMAGE_SERVER_NAME:$TESTED_SERVER_TAG

#      - run: |
#          CLIENT_TAG=1.0
#          IMAGE_CLIENT_NAME=montepouli-client
#          docker login https://montepoeli.club -u $DOCKER_USER -p $DOCKER_PASSWORD
#          docker push $DOMAIN/$IMAGE_CLIENT_NAME:$CLIENT_TAG

workflows:
  version: 2
  build_and_test:
    jobs:
      - build-client
      - build-server
      - build-e2e-client
      - build-storybook
      - e2e-test:
          requires:
            - build-e2e-client
            - build-client
            - build-server
      - retag-images:
          requires:
            - e2e-test
