{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/main/components/landing/landing.component.ts","./src/app/shared/modules/auth/auth.module.ts","./src/app/shared/modules/auth/guards/auth-guard.service.ts","./src/app/shared/modules/auth/services/auth/auth.service.ts","./src/app/shared/modules/http/http.module.ts","./src/app/shared/modules/http/services/custom-http/custom-http.service.ts","./src/app/shared/modules/interceptor/interceptor.module.ts","./src/app/shared/modules/interceptor/interceptors/http-error.interceptor.ts","./src/app/shared/modules/interceptor/interceptors/invalid-token.interceptor.ts","./src/app/shared/modules/notification/notification.module.ts","./src/app/shared/modules/notification/services/notification/notification.service.ts","./src/app/shared/modules/translate/custom-translate.module.ts","./src/app/shared/modules/translate/directives/translate.directive.ts","./src/app/shared/modules/translate/services/language-preference.service.ts","./src/app/shared/services/app.init.ts","./src/app/shared/services/environment/environment.service.ts","./src/app/shared/services/global-error-handler/global-error-handler.service.ts","./src/app/shared/services/theme/theme.service.ts","./src/app/shared/services/users/user.service.ts","./src/app/shared/services/util/util.service.ts","./src/environments/dynamic-environment.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACqB;AACG;;;AAE/E,8EAA8E;AAC9E,MAAM,SAAS,GAAW;IACxB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2FAAgB;KAC5B;IACD;QACE,IAAI,EAAE,OAAO;QACb,YAAY,EAAE,GAAG,EAAE,CAAC,+qBAA2C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;KACzF;IACD;QACE,IAAI,EAAE,MAAM;QACZ,YAAY,EAAE,GAAG,EAAE,CAAC,+UAAyD,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,iBAAiB,CAAC;QAC5G,WAAW,EAAE,CAAC,wFAAS,CAAC;KACzB;IACD,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE;CAC/B,CAAC;AAKK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAChC,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;gBAC1C,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACzBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8E;AACtB;AACa;;;;;AAM9D,MAAM,YAAY;IAyBvB,YAAoB,gBAAkC,EAClC,iBAAoC,EACpC,YAA0B;QAF1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,iBAAY,GAAZ,YAAY,CAAc;QAtBvC,yBAAoB,GAAG,CAAC,CAAC,EAAE,EAAE;;YAClC,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,sBAAsB,OAAC,CAAC,0CAAE,OAAO,CAAC,CAAC;YAEtE,IAAI,CAAC,gCAAgC,EAAE,CAAC;YACxC,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,CAAC;YAE1C,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;QACzC,CAAC;QAEO,qCAAgC,GAAG,GAAG,EAAE;YAC9C,MAAM,uBAAuB,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC;YACtF,MAAM,oBAAoB,GAAG,KAAK,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,MAAM,CAAC,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;YAEnH,IAAI,oBAAoB,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnC,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,oBAAoB,CAAC,CAAC;aACvF;QACH,CAAC;QAEM,uBAAkB,GAAG,MAAM,CAAC,UAAU,CAAC,8BAA8B,CAAC,CAAC;IAI7B,CAAC;IAE3C,QAAQ;QACb,MAAM,KAAK,GAAkC,IAAI,CAAC,YAAY,CAAC,+BAA+B,EAAE,CAAC;QAEjG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACjE,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAE/B,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;QAEvC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;IACjE,CAAC;IAEO,0BAA0B,CAAC,KAAoC;QACrE,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACjE,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;IACjC,CAAC;IAEM,WAAW;QAChB,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;IACpE,CAAC;;wEA/CU,YAAY;4FAAZ,YAAY;QCRzB,sEACI;QAAA,2EAA+B;QACnC,4DAAM;;QAFD,+EAA2B;;6FDQnB,YAAY;cAJxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;aACpC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;AAEhB;AACT;AACA;AACW;AACqB;AAC5B;AACE;AACS;AACiB;AAChB;AACqB;AAC4B;AACpD;AAC+B;AAChC;;;AAEpD,SAAS,QAAQ,CAAC,cAA8B;IACrD,OAAO,GAAG,EAAE,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;AACrC,CAAC;AA0BM,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBApBT;QACT,gEAAa;QACb,kEAAc;QACd,yEAAc;QACd,EAAE,OAAO,EAAE,6DAAe,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,yEAAc,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE;QACvF,EAAC,OAAO,EAAE,0DAAY,EAAE,QAAQ,EAAE,6HAAyB,EAAC;KAC7D,YACQ;YACP,oEAAgB;YAChB,4DAAY;YACZ,uEAAa;YACb,4FAAuB;YACvB,wGAAqB;YACrB,2EAAmB,CAAC,QAAQ,CAAC,gBAAgB,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;YAC/D,4EAAU;YACV,iGAAiB;YACjB,yEAAe;SAChB;mIAGU,SAAS,mBAvBlB,2DAAY;QACZ,2FAAgB,aAUhB,oEAAgB;QAChB,4DAAY;QACZ,uEAAa;QACb,4FAAuB;QACvB,wGAAqB,+EAErB,4EAAU;QACV,iGAAiB;QACjB,yEAAe;6FAIN,SAAS;cAzBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,2FAAgB;iBACjB;gBACD,SAAS,EAAE;oBACT,gEAAa;oBACb,kEAAc;oBACd,yEAAc;oBACd,EAAE,OAAO,EAAE,6DAAe,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,yEAAc,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE;oBACvF,EAAC,OAAO,EAAE,0DAAY,EAAE,QAAQ,EAAE,6HAAyB,EAAC;iBAC7D;gBACD,OAAO,EAAE;oBACP,oEAAgB;oBAChB,4DAAY;oBACZ,uEAAa;oBACb,4FAAuB;oBACvB,wGAAqB;oBACrB,2EAAmB,CAAC,QAAQ,CAAC,gBAAgB,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;oBAC/D,4EAAU;oBACV,iGAAiB;oBACjB,yEAAe;iBAChB;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC7CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;AAClB;AAC+B;AACnB;;;;AAM5D,MAAM,gBAAgB;IAI3B,YAAoB,MAAc,EACd,cAA8B,EAC9B,WAAwB;QAFxB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QAJpC,gBAAW,GAAG,IAAI,qEAAW,EAAE,CAAC;IAKxC,CAAC;IAEM,QAAQ;QACb,IAAI,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,EAAE;YACtC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,EAAC,UAAU,EAAE,IAAI,CAAC,cAAc,EAAC,CAAC,CAAC;SAChH;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,EAAC,UAAU,EAAE,IAAI,CAAC,cAAc,EAAC,CAAC,CAAC;SACjH;IACH,CAAC;;gFAfU,gBAAgB;gGAAhB,gBAAgB;6FAAhB,gBAAgB;cAJ5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,EAAE;gBACZ,eAAe,EAAE,qEAAuB,CAAC,MAAM;aAChD;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAuC;AACM;AAC0B;;AAShE,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,kBALZ;YACP,4DAAY;YACZ,oFAAkB;SACnB;mIAEU,UAAU,cAJnB,4DAAY;QACZ,oFAAkB;6FAGT,UAAU;cAPtB,sDAAQ;eAAC;gBACR,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE;oBACP,4DAAY;oBACZ,oFAAkB;iBACnB;aACF;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACwD;AACvD;AACW;AACK;AACwC;AAC9B;;;;;;AAK7D,MAAM,SAAS;IAGpB,YAAoB,WAAwB,EACxB,MAAc,EACd,mBAAwC,EACxC,gBAAkC;QAHlC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAL9C,gBAAW,GAAG,IAAI,qEAAW,EAAE,CAAC;IAMxC,CAAC;IAEM,WAAW,CAAC,IAA4B,EAAE,KAA0B;QACzE,IAAI,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,EAAE;YACtC,OAAO,IAAI,CAAC;SACb;QAED,qDAAQ,CAAC;YACP,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,+BAA+B,CAAC;YAC1D,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,8BAA8B,CAAC;SAC1D,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,EAAE,KAAK,CAAmB,EAAE,EAAE;YAClD,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACrE,OAAO,KAAK,CAAC;IACf,CAAC;;kEAvBU,SAAS;4FAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;6FAEP,SAAS;cAHrB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACE;AACN;AAEsD;AAClB;AACtB;;;;;AAK1C,MAAM,WAAW;IAItB,YAAoB,MAAc,EACd,WAA8B,EAC9B,aAA4B;QAF5B,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAmB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAJxC,gBAAW,GAAG,IAAI,qEAAW,EAAE,CAAC;IAKxC,CAAC;IAEM,eAAe;QACpB,OAAO,IAAI,CAAC,0BAA0B,EAAE,CAAC;IAC3C,CAAC;IAEO,0BAA0B;QAChC,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IAEM,QAAQ;QACb,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;IAC/E,CAAC;IAEM,KAAK,CAAC,IAAS;QACpB,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAC1B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE;YAC5C,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,GAAG;SACnB,CAAC,CAAC,IAAI,CACL,0DAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAC/E,CAAC;IACN,CAAC;IAEM,MAAM;QACX,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACvE,CAAC;IAEM,YAAY;QACjB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAEO,gBAAgB;QACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC;aACjE,SAAS,EAAE,CAAC;IACjB,CAAC;;sEA5CU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAuC;AACM;AACS;;AAS/C,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,kBALZ;YACP,4DAAY;YACZ,qEAAgB;SACjB;mIAEU,UAAU,cAJnB,4DAAY;QACZ,qEAAgB;6FAGP,UAAU;cAPtB,sDAAQ;eAAC;gBACR,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE;oBACP,4DAAY;oBACZ,qEAAgB;iBACjB;aACF;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACkC;AAExC;AACqD;;;;AAExF,gCAAgC;AAIzB,MAAM,iBAAiB;IAW5B,YAAoB,UAAsB,EACtB,kBAAsC;QADtC,eAAU,GAAV,UAAU,CAAY;QACtB,uBAAkB,GAAlB,kBAAkB,CAAoB;QAPnD,gBAAW,GAAG;YACnB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC;YAC9D,eAAe,EAAE,IAAI;YACrB,OAAO,EAAE,UAAwB;SAClC,CAAC;IAIF,CAAC;IAEM,GAAG,CAAI,GAAW;QACvB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAI,IAAI,CAAC,OAAO,GAAG,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC;aAChE,IAAI,CACH,0DAAG,CAAC,CAAC,YAA6B,EAAE,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAC1D,CAAC;IACN,CAAC;IAEM,IAAI,CAAI,GAAW,EAAE,IAAQ;QAClC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAI,IAAI,CAAC,OAAO,GAAG,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC;aACvE,IAAI,CACH,0DAAG,CAAC,CAAC,YAA6B,EAAE,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAC1D,CAAC;IACN,CAAC;IAEO,eAAe;QACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,EAAE,CAAC;QAEjD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC;IACzD,CAAC;;kFAzCU,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;6FAEP,iBAAiB;cAH7B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACkC;AACE;AACM;AAClC;;AAYxC,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,mBATjB;QACT,EAAC,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,+FAAuB,EAAE,KAAK,EAAE,IAAI,EAAC;QAC5E,EAAC,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,yFAAoB,EAAE,KAAK,EAAE,IAAI,EAAC;KAC1E,YACQ;YACP,4DAAY;YACZ,qEAAgB;SACjB;mIAEU,iBAAiB,cAJ1B,4DAAY;QACZ,qEAAgB;6FAGP,iBAAiB;cAV7B,sDAAQ;eAAC;gBACR,SAAS,EAAE;oBACT,EAAC,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,+FAAuB,EAAE,KAAK,EAAE,IAAI,EAAC;oBAC5E,EAAC,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,yFAAoB,EAAE,KAAK,EAAE,IAAI,EAAC;iBAC1E;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,qEAAgB;iBACjB;aACF;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACK;AACiD;AACzD;;;AAEzC,gCAAgC;AAIzB,MAAM,oBAAoB;IAE/B,YAA2B,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;IACnE,CAAC;IAEM,SAAS,CAAC,OAAyB,EAAE,IAAiB;QAC3D,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;aACxB,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,EACR,iEAAU,CAAC,CAAC,KAAwB,EAAE,EAAE;YACtC,MAAM,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;YAC1E,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAE1C,OAAO,uDAAU,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC,CACH,CAAC;IACN,CAAC;;wFAhBU,oBAAoB;uGAApB,oBAAoB,WAApB,oBAAoB,mBAFnB,MAAM;6FAEP,oBAAoB;cAHhC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACF;AACD;AACyB;AACgC;AAC7C;;;;;AAK9C,MAAM,uBAAuB;IAElC,YACU,WAAwB,EACxB,mBAAwC,EACxC,gBAAkC;QAFlC,gBAAW,GAAX,WAAW,CAAa;QACxB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAG,CAAC;IAEzC,SAAS,CAAC,OAAyB,EAAE,IAAiB;QAC3D,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;aACxB,IAAI,CACH,iEAAU,CAAC,CAAC,KAAwB,EAAE,EAAE;YACtC,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;gBAC3D,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;gBAE1B,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,4BAA4B,CAAC;qBACpD,SAAS,CAAC,CAAC,OAAe,EAAE,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC1E,OAAO;aACV;YAED,OAAO,uDAAU,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,CAAC,CACH,CAAC;IACN,CAAC;;8FAtBU,uBAAuB;0GAAvB,uBAAuB,WAAvB,uBAAuB,mBAFtB,MAAM;6FAEP,uBAAuB;cAHnC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAuC;AACM;AACL;;;AASjC,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,kBALpB;YACP,4DAAY;YACZ,uDAAY,CAAC,OAAO,EAAE;SACvB;mIAEU,kBAAkB,cAJ3B,4DAAY;6FAIH,kBAAkB;cAP9B,sDAAQ;eAAC;gBACR,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE;oBACP,4DAAY;oBACZ,uDAAY,CAAC,OAAO,EAAE;iBACvB;aACF;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAyC;AACA;AACoB;;;AAKtD,MAAM,mBAAmB;IAE9B,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAChD,CAAC;IAEM,OAAO,CAAC,OAAe,EAAE,KAAc;QAC5C,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC7C,CAAC;IAEM,IAAI,CAAC,OAAe,EAAE,KAAc;QACzC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC1C,CAAC;;sFAXU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,uEAAkB;6FAEnB,mBAAmB;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,uEAAkB;aAC/B;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACM;AAC0C;AACvC;AACe;AACK;AACrB;AACoC;;;;AAuB5E,MAAM,qBAAqB;IAChC,YAAY,yBAAoD,EACpD,SAA2B;QACrC,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;QAEjC,MAAM,gBAAgB,GAAG,yBAAyB,CAAC,GAAG,EAAE,CAAC;QAEzD,SAAS,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;QAC3C,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAClC,CAAC;;oGATU,qBAAqB;oKAArB,qBAAqB,uSAbvB;YACP,4DAAY;YACZ,mEAAe,CAAC,QAAQ,CAAC;gBACvB,MAAM,EAAE;oBACN,OAAO,EAAE,mEAAe;oBACxB,UAAU,EAAE,iBAAiB;oBAC7B,IAAI,EAAE,CAAC,+DAAU,CAAC;iBACnB;gBACD,MAAM,EAAE,IAAI;aACb,CAAC;YACF,4DAAU;SACX;QAbC,mEAAe;mIAeN,qBAAqB,mBAnB9B,kFAAkB,aAOlB,4DAAY,uEASZ,4DAAU,aAbV,kFAAkB;QAClB,mEAAe;6FAeN,qBAAqB;cArBjC,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,kFAAkB;iBACnB;gBACD,OAAO,EAAE;oBACP,kFAAkB;oBAClB,mEAAe;iBAChB;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,mEAAe,CAAC,QAAQ,CAAC;wBACvB,MAAM,EAAE;4BACN,OAAO,EAAE,mEAAe;4BACxB,UAAU,EAAE,iBAAiB;4BAC7B,IAAI,EAAE,CAAC,+DAAU,CAAC;yBACnB;wBACD,MAAM,EAAE,IAAI;qBACb,CAAC;oBACF,4DAAU;iBACX;aACF;;AAaM,SAAS,iBAAiB,CAAC,IAAgB;IAChD,OAAO,IAAI,8EAAmB,CAAC,IAAI,EAAE,gBAAgB,EAAE,OAAO,CAAC,CAAC;AAClE,CAAC;;;;;;;;;;;;;AC5CD;AAAA;AAAA;AAAA;AAAA;AAA8E;AACzB;AACS;;;AAKvD,MAAM,kBAAkB;IAQ7B,YAA2B,gBAAkC,EAClC,UAAsB,EACtB,QAAmB;QAFnB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,eAAU,GAAV,UAAU,CAAY;QACtB,aAAQ,GAAR,QAAQ,CAAW;QAJvC,aAAQ,GAAG,WAAW,CAAC;IAK9B,CAAC;IAEM,QAAQ;QACb,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;aAClC,IAAI,CACH,mEAAY,CAAC,GAAG,CAAC,EACjB,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC;QAE5D,IAAI,CAAC,gBAAgB,CAAC,YAAY;aAC7B,IAAI,CACH,gEAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;aAClD,IAAI,CACH,mEAAY,CAAC,GAAG,CAAC,EACjB,4DAAK,CAAC,CAAC,CAAC,CACT,CAAC,CACH,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC;IAClE,CAAC;IAEO,WAAW,CAAC,WAAmB;QACrC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;IACvF,CAAC;;oFAhCU,kBAAkB;kGAAlB,kBAAkB;6FAAlB,kBAAkB;cAH9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;aAC3B;;kBAGE,mDAAK;mBAAC,cAAc;;kBAGpB,mDAAK;;;;;;;;;;;;;;ACZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACY;AACW;AACC;;;;;AAM5D,MAAM,yBAAyB;IAGpC,YAAoB,WAAwB,EACxB,gBAAkC,EAClC,WAAwB;QAFxB,gBAAW,GAAX,WAAW,CAAa;QACxB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,gBAAW,GAAX,WAAW,CAAa;QAJpC,oBAAe,GAAG,IAAI,CAAC;IAIiB,CAAC;IAE1C,GAAG;QACR,IAAI,gBAAgB,GAAG,YAAY,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;QAEhE,IAAI,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,EAAE;YACxD,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC;SACzC;QAED,OAAO,gBAAgB,CAAC;IAC1B,CAAC;IAEM,WAAW,CAAC,IAAU;QAC3B,MAAM,mBAAmB,GAAG,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAEzF,IAAI,CAAC,2BAA2B,CAAC,mBAAmB,CAAC,CAAC;IACxD,CAAC;IAEO,2BAA2B,CAAC,UAAkB;QACpD,IAAI,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE;YAClD,YAAY,CAAC,OAAO,CAAC,kBAAkB,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;SAChE;aAAM;YACL,YAAY,CAAC,OAAO,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC;SACtD;IACH,CAAC;IAEM,mBAAmB,CAAC,IAAU,EAAE,YAAoB;QACzD,IAAI,YAAY,KAAK,IAAI,EAAE;YACzB,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACjC;aAAM,IAAI,YAAY,KAAK,IAAI,EAAE;YAChC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACjC;QAED,IAAI,CAAC,2BAA2B,CAAC,YAAY,CAAC,CAAC;QAE/C,IAAI,CAAC,WAAW,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,uCAAuC,CAAC,YAAY,CAAC,CAAC;aAC9G,SAAS,EAAE,CAAC;IACjB,CAAC;IAEO,gCAAgC,CAAC,uBAA+B;QACtE,IAAI,uBAAuB,KAAK,OAAO,EAAE;YACvC,OAAO,IAAI,CAAC;SACb;QAED,IAAI,uBAAuB,KAAK,SAAS,EAAE;YACzC,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAEM,uCAAuC,CAAC,YAAoB;QACjE,IAAI,YAAY,KAAK,IAAI,EAAE;YACzB,OAAO,OAAO,CAAC;SAChB;QAED,IAAI,YAAY,KAAK,IAAI,EAAE;YACzB,OAAO,SAAS,CAAC;SAClB;IACH,CAAC;;kGA9DU,yBAAyB;4GAAzB,yBAAyB,WAAzB,yBAAyB,mBAFxB,MAAM;6FAEP,yBAAyB;cAHrC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAyC;AACf;AACS;;AAK5B,MAAM,cAAc;IAEzB,mDAAmD;IACnD,wCAAwC;IACjC,IAAI;QACT,OAAO,iDAAI,CACT,KAAK,CAAC,wBAAwB,CAAC,CAAC,IAAI,CAAC,CAAC,QAAa,EAAE,EAAE;YACrD,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC,CAAC,CACH,CAAC,IAAI,CACJ,0DAAG,CAAC,CAAC,MAAM,EAAE,EAAE;YACb,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;YACvB,OAAO;QACT,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACpB,CAAC;;4EAdU,cAAc;iGAAd,cAAc,WAAd,cAAc;6FAAd,cAAc;cAD1B,wDAAU;;;;;;;;;;;;;;ACNX;AAAA;AAAA;AAAA;AAAyC;AACwB;;AAK1D,MAAM,kBAAkB;IAE7B;IAAgB,CAAC;IAEV,GAAG;QACR,OAAO,IAAI,qEAAW,EAAE,CAAC;IAC3B,CAAC;;oFANU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6FAEP,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAyD;;AAKlD,MAAM,yBAAyB;IAE7B,WAAW,CAAC,KAAU;QAC3B,MAAM,kBAAkB,GAAG,4BAA4B,CAAC;QAEvD,IAAI,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;YAC1C,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;aAAM;YACL,2BAA2B;YAC3B,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACtB;IACH,CAAC;IAEM,YAAY;QACjB,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;;kGAfS,yBAAyB;4GAAzB,yBAAyB,WAAzB,yBAAyB,mBAFxB,MAAM;6FAEP,yBAAyB;cAHrC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAA2C;;AAKpC,MAAM,YAAY;IAEhB,+BAA+B;;QACpC,UAAI,MAAM,CAAC,UAAU,CAAC,8BAA8B,CAAC,0CAAE,OAAO,EAAE;YAC9D,OAAO,aAAa,CAAC;SACtB;aAAM;YACL,OAAO,aAAa,CAAC;SACtB;IACH,CAAC;IAEM,sBAAsB,CAAC,QAAiB;QAC7C,IAAI,QAAQ,EAAE;YACZ,OAAO,aAAa,CAAC;SACtB;aAAM;YACL,OAAO,aAAa,CAAC;SACtB;IACH,CAAC;;wEAhBU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAyC;AAGuD;AAC7B;;;AAK5D,MAAM,WAAW;IAItB,YAAoB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAHhD,gBAAW,GAAG,IAAI,qEAAW,EAAE,CAAC;QAChC,SAAI,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC;IAG3D,CAAC;IAEM,MAAM;QACX,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAS,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IACzF,CAAC;IAEM,cAAc;QACnB,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;IACrG,CAAC;IAEM,yBAAyB,CAAC,QAAgB,EAAE,kBAA0B;QAC3E,MAAM,IAAI,GAAQ;YAChB,QAAQ;YACR,kBAAkB;SACnB,CAAC;QAEF,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,0BAA0B,EAAE,IAAI,CAAC,CAAC;IACzH,CAAC;;sEAtBU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAyC;;AAKlC,MAAM,WAAW;IAEf,iBAAiB,CAAC,KAAU;QACjC,OAAO,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,CAAC;IAC/C,CAAC;;sEAJU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACAD;AAAA;AAAO,MAAM,kBAAkB;IAC7B,IAAW,WAAW;QACpB,OAAO,MAAM,CAAC,MAAM,CAAC;IACvB,CAAC;CACF;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEP;AAElD,MAAM,WAAY,SAAQ,uEAAkB;IAOjD;QACE,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,0CAA0C;QAC1C,IAAI,CAAC,cAAc,GAAG;YACpB,SAAS,EAAE,eAAe;YAC1B,aAAa,EAAE,yBAAyB;SACzC,CAAC;QAEF,IAAI,CAAC,QAAQ,GAAG;YACd,KAAK,EAAE,qBAAqB;YAC5B,eAAe,EAAE,IAAI;YACrB,SAAS,EAAE,EAAE;YACb,YAAY,EAAE;gBACZ,OAAO,EAAE,SAAS;gBAClB,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,MAAM;aACb;SACF,CAAC;QAEF,IAAI,CAAC,OAAO,GAAG;YACb,YAAY,EAAE;gBACZ,MAAM,EAAE,SAAS;gBACjB,OAAO,EAAE,SAAS;gBAClB,SAAS,EAAE,aAAa;gBACxB,MAAM,EAAE,SAAS;gBACjB,KAAK,EAAE,QAAQ;gBACf,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,OAAO;gBACb,MAAM,EAAE,SAAS;gBACjB,0BAA0B,EAAE,sBAAsB;gBAClD,OAAO,EAAE,UAAU;aACpB;SACF,CAAC;IACJ,CAAC;CACF;;;;;;;;;;;;;AChDD;AAAA;AAAA;AAAA;AAAA;AAA6C;AAIU;;;AAEvD,MAAM,WAAW,GAAG,IAAI,qEAAW,EAAE,CAAC;AAEtC,IAAI,WAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE;IACX,MAAM,GAAG,CAAC;AACZ,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './shared/modules/auth/guards/auth-guard.service';\nimport { LandingComponent } from './main/components/landing/landing.component';\n\n// TODO: figure out how to use the environment here for the environment routes\nconst appRoutes: Routes = [\n  {\n    path: '',\n    component: LandingComponent\n  },\n  {\n    path: 'login',\n    loadChildren: () => import('./main/modules/login/login.module').then(m => m.LoginModule)\n  },\n  {\n    path: 'home',\n    loadChildren: () => import('./main/modules/main-content/main-content.module').then(m => m.MainContentModule),\n    canActivate: [AuthGuard],\n  },\n  { path: '**', redirectTo: '' }\n];\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n}\n","import {Component, OnInit, ChangeDetectorRef, OnDestroy} from '@angular/core';\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { ThemeService } from './shared/services/theme/theme.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  \n  // @HostBinding('class') \n  public componentCssClass;\n  \n  public themeChangingHandler = (e) => {\n    const newTheme = this.themeService.getThemeForColorScheme(e?.matches);\n    \n    this.removeActiveThemeFromApplication();\n    this.addThemeToWholeApplication(newTheme);\n    \n    this.changeDetectorRef.detectChanges();\n  }\n\n  private removeActiveThemeFromApplication = () => {\n    const overlayContainerClasses = this.overlayContainer.getContainerElement().classList;\n    const themeClassesToRemove = Array.from(overlayContainerClasses).filter((item: string) => item.includes('-theme'));\n    \n    if (themeClassesToRemove.length > 0) {\n      this.overlayContainer.getContainerElement().classList.remove(...themeClassesToRemove);\n    }\n  }\n\n  public darkModeMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n\n  constructor(private overlayContainer: OverlayContainer, \n              private changeDetectorRef: ChangeDetectorRef,\n              private themeService: ThemeService) {}\n\n  public ngOnInit(): void {\n    const theme: 'black-theme' | 'light-theme' = this.themeService.getThemeBasedOnSystemPreference();\n    \n    this.overlayContainer.getContainerElement().classList.add(theme);\n    this.componentCssClass = theme;\n\n    this.addThemeToWholeApplication(theme);\n\n    this.darkModeMediaQuery.addListener(this.themeChangingHandler);\n  }\n\n  private addThemeToWholeApplication(theme: 'black-theme' | 'light-theme'): void {\n    this.overlayContainer.getContainerElement().classList.add(theme);\n    this.componentCssClass = theme;\n  }\n\n  public ngOnDestroy(): void {\n    this.darkModeMediaQuery.removeListener(this.themeChangingHandler);\n  }\n}\n","<div [class]=\"componentCssClass\">\n    <router-outlet></router-outlet>\n</div>\n","import { APP_INITIALIZER, NgModule, ErrorHandler } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CookieService } from 'ngx-cookie-service';\nimport { TranslateStore } from '@ngx-translate/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { LandingComponent } from './main/components/landing/landing.component';\nimport { AuthModule } from './shared/modules/auth/auth.module';\nimport { InterceptorModule } from './shared/modules/interceptor/interceptor.module';\nimport { GlobalErrorHandlerService } from './shared/services/global-error-handler/global-error-handler.service';\nimport { AppInitService } from './shared/services/app.init';\nimport { CustomTranslateModule } from './shared/modules/translate/custom-translate.module';\nimport { MatButtonModule } from '@angular/material/button';\n\nexport function init_app(appLoadService: AppInitService): () => Promise<any> {\n  return () => appLoadService.init();\n}\n@NgModule({\n  declarations: [\n    AppComponent,\n    LandingComponent\n  ],\n  providers: [\n    CookieService,\n    TranslateStore,\n    AppInitService,\n    { provide: APP_INITIALIZER, useFactory: init_app, deps: [AppInitService], multi: true },\n    {provide: ErrorHandler, useClass: GlobalErrorHandlerService}\n  ],\n  imports: [\n    AppRoutingModule,\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    CustomTranslateModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {enabled: true}),\n    AuthModule,\n    InterceptorModule,\n    MatButtonModule\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { AuthService } from '../../../shared/modules/auth/services/auth/auth.service';\nimport { Environment } from '../../../../environments/environment';\n\n@Component({\n  template: ``,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LandingComponent implements OnInit {\n\n  private environment = new Environment();\n\n  constructor(private router: Router,\n              private activatedRoute: ActivatedRoute,\n              private authService: AuthService) {\n  }\n\n  public ngOnInit(): void {\n    if (this.authService.isAuthenticated()) {\n      this.router.navigate(['../' + this.environment.frontend.BASIC_ROUTES.HOME], {relativeTo: this.activatedRoute});\n    } else {\n      this.router.navigate(['../' + this.environment.frontend.BASIC_ROUTES.LOGIN], {relativeTo: this.activatedRoute});\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NotificationModule} from '../notification/notification.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    NotificationModule\n  ]\n})\nexport class AuthModule { }\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {forkJoin, Observable} from 'rxjs';\nimport {TranslateService} from '@ngx-translate/core';\nimport {AuthService} from '../services/auth/auth.service';\nimport {NotificationService} from '../../notification/services/notification/notification.service';\nimport {Environment} from '../../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  private environment = new Environment();\n\n  constructor(private authService: AuthService,\n              private router: Router,\n              private notificationService: NotificationService,\n              private translateService: TranslateService) {\n  }\n\n  public canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.authService.isAuthenticated()) {\n      return true;\n    }\n\n    forkJoin([\n      this.translateService.get('warnings.not_authorized.title'),\n      this.translateService.get('warnings.not_authorized.body'),\n    ]).subscribe(([message, title]: [string, string]) => {\n      this.notificationService.warning(message, title);\n    });\n\n    this.router.navigate([this.environment.frontend.BASIC_ROUTES.LOGIN]);\n    return false;\n  }\n\n}\n","import {Router} from '@angular/router';\nimport {Injectable} from '@angular/core';\nimport {tap} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\nimport {CustomHttpService} from '../../../http/services/custom-http/custom-http.service';\nimport {Environment} from '../../../../../../environments/environment';\nimport {CookieService} from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n\n  private environment = new Environment();\n\n  constructor(private router: Router,\n              private httpService: CustomHttpService,\n              private cookieService: CookieService) {\n  }\n\n  public isAuthenticated(): boolean {\n    return this.doesTheUserHaveAValidToken();\n  }\n\n  private doesTheUserHaveAValidToken(): boolean {\n    return this.getToken().includes('true');\n  }\n\n  public getToken(): string {\n    return this.cookieService.get(this.environment.authentication.AUTHTOKENNAME);\n  }\n\n  public login(user: any): Observable<any> {\n    return this.httpService.post(\n      this.environment.backend.ENTRY_POINTS.SIGNIN, {\n        username: user.username,\n        password: user.pwd,\n      }).pipe(\n        tap(() => this.router.navigate([this.environment.frontend.BASIC_ROUTES.HOME]))\n      );\n  }\n\n  public logout(): void {\n    this.clearSession();\n\n    this.router.navigate([this.environment.frontend.BASIC_ROUTES.LOGIN]);\n  }\n\n  public clearSession(): void {\n    this.clearHttpCookies();\n  }\n\n  private clearHttpCookies(): void {\n    this.httpService.post(this.environment.backend.ENTRY_POINTS.SIGNOUT)\n      .subscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ]\n})\nexport class HttpModule { }\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {EnvironmentService} from '../../../../services/environment/environment.service';\n\n// TODO: move to shared services\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomHttpService {\n  private environment: any;\n\n  private baseUrl: string;\n\n  public httpOptions = {\n    headers: new HttpHeaders({'Content-Type': 'application/json'}),\n    withCredentials: true,\n    observe: 'response' as 'response',\n  };\n\n  constructor(private httpClient: HttpClient,\n              private environmentService: EnvironmentService) {\n  }\n\n  public get<T>(url: string): Observable<T> {\n    if (!this.environment) {\n      this.initEnvironment();\n    }\n\n    return this.httpClient.get<T>(this.baseUrl + url, this.httpOptions)\n      .pipe(\n        map((httpResponse: HttpResponse<T>) => httpResponse.body)\n      );\n  }\n\n  public post<T>(url: string, body?: T): Observable<T> {\n    if (!this.environment) {\n      this.initEnvironment();\n    }\n\n    return this.httpClient.post<T>(this.baseUrl + url, body, this.httpOptions)\n      .pipe(\n        map((httpResponse: HttpResponse<T>) => httpResponse.body),\n      );\n  }\n\n  private initEnvironment(): void {\n    this.environment = this.environmentService.get();\n\n    this.baseUrl = this.environment.environment.backendUrl;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {HttpErrorInterceptor} from './interceptors/http-error.interceptor';\nimport {InvalidTokenInterceptor} from './interceptors/invalid-token.interceptor';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: InvalidTokenInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true}\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ]\n})\nexport class InterceptorModule {\n}\n","import {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError, retry} from 'rxjs/operators';\nimport {NotificationService} from '../../notification/services/notification/notification.service';\nimport {Injectable} from '@angular/core';\n\n// TODO: move to shared services\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpErrorInterceptor implements HttpInterceptor {\n\n  public constructor(private notificationService: NotificationService) {\n  }\n\n  public intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request)\n      .pipe(\n        retry(2),\n        catchError((error: HttpErrorResponse) => {\n          const message = error.error.message ? error.error.message : error.message;\n          this.notificationService.warning(message);\n\n          return throwError(error);\n        }),\n      );\n  }\n}\n","import {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\nimport {Injectable} from '@angular/core';\nimport {AuthService} from '../../auth/services/auth/auth.service';\nimport {NotificationService} from '../../notification/services/notification/notification.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InvalidTokenInterceptor implements HttpInterceptor {\n\n  public constructor(\n    private authService: AuthService,\n    private notificationService: NotificationService,\n    private translateService: TranslateService) {}\n\n  public intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request)\n      .pipe(\n        catchError((error: HttpErrorResponse) => {\n          if (error.status === 401 && !request.url.includes('signIn')) {\n            this.authService.logout();\n\n            this.translateService.get('info.no-valid-session.body')\n              .subscribe((message: string) => this.notificationService.info(message));\n            return;\n        }\n\n        return throwError(error);\n        }),\n      );\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ToastrModule} from 'ngx-toastr';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    ToastrModule.forRoot()\n  ]\n})\nexport class NotificationModule { }\n","import {Injectable} from '@angular/core';\nimport {ToastrService} from 'ngx-toastr';\nimport {NotificationModule} from '../../notification.module';\n\n@Injectable({\n  providedIn: NotificationModule,\n})\nexport class NotificationService {\n\n  constructor(private toastrService: ToastrService) {\n  }\n\n  public warning(message: string, title?: string): void {\n    this.toastrService.warning(message, title);\n  }\n\n  public info(message: string, title?: string): void {\n    this.toastrService.info(message, title);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TranslateLoader, TranslateModule, TranslateService} from '@ngx-translate/core';\nimport {HttpClient} from '@angular/common/http';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {TranslateDirective} from './directives/translate.directive';\nimport {HttpModule} from '../http/http.module';\nimport { LanguagePreferenceService } from './services/language-preference.service';\n\n@NgModule({\n  declarations: [\n    TranslateDirective,\n  ],\n  exports: [\n    TranslateDirective,\n    TranslateModule,\n  ],\n  imports: [\n    CommonModule,\n    TranslateModule.forChild({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient],\n      },\n      extend: true\n    }),\n    HttpModule\n  ]\n})\nexport class CustomTranslateModule {\n  constructor(languagePreferenceService: LanguagePreferenceService, \n              translate: TranslateService) {\n    translate.addLangs(['nl', 'en']);\n\n    const preferedLanguage = languagePreferenceService.get();\n\n    translate.setDefaultLang(preferedLanguage);\n    translate.use(preferedLanguage);\n  }\n}\n\nexport function HttpLoaderFactory(http: HttpClient): any {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n","import {Directive, ElementRef, Input, OnInit, Renderer2} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {debounceTime, retry, switchMap} from 'rxjs/operators';\n\n@Directive({\n  selector: '[appTranslate]',\n})\nexport class TranslateDirective implements OnInit {\n\n  @Input('appTranslate')\n  public key: string;\n\n  @Input()\n  public property = 'innerHTML';\n\n  public constructor(private translateService: TranslateService,\n                     private elementRef: ElementRef,\n                     private renderer: Renderer2) {\n  }\n\n  public ngOnInit(): void {\n    this.translateService.get(this.key)\n    .pipe(\n      debounceTime(200),\n      retry(5)\n    ).subscribe((translation) => this.setProperty(translation));\n\n    this.translateService.onLangChange\n        .pipe(\n          switchMap(() => this.translateService.get(this.key)\n          .pipe(\n            debounceTime(200),\n            retry(5)\n          ))\n        ).subscribe((translation) => this.setProperty(translation));\n  }\n\n  private setProperty(translation: string): void {\n    this.renderer.setProperty(this.elementRef.nativeElement, this.property, translation);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UtilService } from '../../../services/util/util.service';\nimport { UserService } from '../../../services/users/user.service';\nimport { User } from '../../../interfaces/user.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguagePreferenceService {\n  private defaultLanguage = 'en';\n  \n  constructor(private utilService: UtilService,\n              private translateService: TranslateService,\n              private userService: UserService) { }\n\n  public get(): string {\n    let preferedLanguage = localStorage.getItem('preferedLanguage');\n\n    if (this.utilService.isNullOrUndefined(preferedLanguage)) {\n      preferedLanguage = this.defaultLanguage; \n    }\n\n    return preferedLanguage;\n  }\n\n  public setWithUser(user: User): void {\n    const translationFileCode = this.mapLanguageToTranslationFileCode(user.preferedLanguage);\n    \n    this.storagePrefereanceInBrowser(translationFileCode);\n  }\n\n  private storagePrefereanceInBrowser(preference: string): void {\n    if (this.utilService.isNullOrUndefined(preference)) {\n      localStorage.setItem('preferedLanguage', this.defaultLanguage);\n    } else {\n      localStorage.setItem('preferedLanguage', preference);\n    }\n  }\n\n  public setWithLanguageCode(user: User, languageCode: string): void {\n    if (languageCode === 'en') {\n      this.translateService.use('en');\n    } else if (languageCode === 'nl') {\n      this.translateService.use('nl');\n    }\n\n    this.storagePrefereanceInBrowser(languageCode);\n\n    this.userService.setUserLanguagePreference(user.name, this.mapTranslationCodeToEnglishLanguageName(languageCode))\n      .subscribe();\n  }\n\n  private mapLanguageToTranslationFileCode(englishPerferedLanguage: string): string {\n    if (englishPerferedLanguage === 'dutch') {\n      return 'nl';\n    }\n\n    if (englishPerferedLanguage === 'english') {\n      return 'en';\n    }\n  }\n\n  public mapTranslationCodeToEnglishLanguageName(languageCode: string): string {\n    if (languageCode === 'nl') {\n      return 'dutch';\n    }\n\n    if (languageCode === 'en') {\n      return 'english';\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {from} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\ndeclare var window: any;\n\n@Injectable()\nexport class AppInitService {\n\n  // This is the method you want to call at bootstrap\n  // Important: It should return a Promise\n  public init(): Promise<any> {\n    return from(\n      fetch('assets/app-config.json').then((response: any) => {\n        return response.json();\n      }),\n    ).pipe(\n      map((config) => {\n        window.config = config;\n        return;\n      })).toPromise();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Environment} from '../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnvironmentService {\n\n  constructor() { }\n\n  public get(): any {\n    return new Environment();\n  }\n}\n","import { Injectable, ErrorHandler } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalErrorHandlerService implements ErrorHandler {\n  \n  public handleError(error: any): void {\n    const chunkFailedMessage = /Loading chunk [\\d]+ failed/;\n \n     if (chunkFailedMessage.test(error.message)) {\n       this.reloadWindow();\n     } else {\n       // tslint:disable-next-line\n       console.error(error);\n     }\n   }\n\n   public reloadWindow(): any {\n     window.location.reload(true);\n   }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n\n  public getThemeBasedOnSystemPreference(): 'black-theme' | 'light-theme' {\n    if (window.matchMedia('(prefers-color-scheme: dark)')?.matches) {\n      return 'black-theme';\n    } else {\n      return 'light-theme';\n    }\n  }\n\n  public getThemeForColorScheme(darkMode: boolean): 'black-theme' | 'light-theme' {\n    if (darkMode) {\n      return 'black-theme';\n    } else {\n      return 'light-theme';\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport { User } from '../../interfaces/user.interface';\nimport { CustomHttpService } from '../../modules/http/services/custom-http/custom-http.service';\nimport { Environment } from '../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private environment = new Environment();\n  private base = this.environment.backend.ENTRY_POINTS.USERS;\n\n  constructor(private customHttpService: CustomHttpService) {\n  }\n\n  public getAll(): Observable<User[]> {\n    return this.customHttpService.get<User[]>(this.environment.backend.ENTRY_POINTS.USERS);\n  }\n\n  public getCurrentUser(): Observable<User> {\n    return this.customHttpService.get<User>(this.base + this.environment.backend.ENTRY_POINTS.CURRENT);\n  }\n\n  public setUserLanguagePreference(username: string, languagePreference: string): Observable<User> {\n    const body: any = {\n      username,\n      languagePreference\n    };\n    \n    return this.customHttpService.post(this.base + this.environment.backend.ENTRY_POINTS.UPDATE_LANGUAGE_PREFERENCE, body);\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UtilService {\n\n  public isNullOrUndefined(value: any): boolean {\n    return value === null || value === undefined;\n  }\n}\n","import {DynamicEnvironmentInterface} from './dynamic-environment.interface';\n\ndeclare var window: any;\n\nexport class DynamicEnvironment {\n  public get environment(): DynamicEnvironmentInterface {\n    return window.config;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nimport {DynamicEnvironment} from './dynamic-environment';\n\nexport class Environment extends DynamicEnvironment {\n\n  public production: boolean;\n  public authentication: any;\n  public frontend: any;\n  public backend: any;\n\n  constructor() {\n    super();\n\n    this.production = false;\n    // TODO: create interface for environments\n    this.authentication = {\n      TOKENNAME: 'montepoeliJwt',\n      AUTHTOKENNAME: 'montepoeliAuthenticated' \n    };\n\n    this.frontend = {\n      TITLE: 'Angular Starter kit',\n      POLLING_TIMEOUT: 1000,\n      PAGE_SIZE: 20,\n      BASIC_ROUTES: {\n        LANDING: 'landing',\n        LOGIN: 'login',\n        HOME: 'home',\n      },\n    };\n\n    this.backend = {\n      ENTRY_POINTS: {\n        SIGNIN: '/signIn',\n        SIGNOUT: '/logout',\n        DASHBOARD: '/statistics',\n        STATUS: '/status',\n        USERS: '/users',\n        GAME: '/game',\n        RULE: '/rule',\n        CREATE: '/create',\n        UPDATE_LANGUAGE_PREFERENCE: '/language-preference',\n        CURRENT: '/current'\n      },\n    };\n  }\n}\n","\nimport {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {Environment} from './environments/environment';\n\nconst environment = new Environment();\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => {\n    throw err;\n  });\n"],"sourceRoot":"webpack:///"}