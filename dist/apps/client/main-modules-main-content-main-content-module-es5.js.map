{"version":3,"sources":["webpack:///Users/rogierderuijter/Projects/montepoeli/node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/layout.js","webpack:///src/app/main/modules/main-content/main-content-routing.module.ts","webpack:///src/app/main/modules/main-content/main-content.component.html","webpack:///src/app/main/modules/main-content/main-content.component.ts","webpack:///src/app/main/modules/main-content/main-content.module.ts","webpack:///src/app/shared/services/grid/grid.service.ts"],"names":["LayoutModule","ɵmod","type","ɵinj","factory","LayoutModule_Factory","t","args","mediaQueriesForWebkitCompatibility","Set","mediaQueryStyleNode","MediaMatcher","_platform","_matchMedia","isBrowser","window","matchMedia","bind","noopMatchMedia","query","WEBKIT","createEmptyStyleRule","ɵfac","MediaMatcher_Factory","ctorParameters","ɵprov","token","providedIn","has","document","createElement","setAttribute","head","appendChild","sheet","insertRule","add","e","console","error","matches","media","addListener","removeListener","BreakpointState","InternalBreakpointState","Query","BreakpointObserver","_mediaMatcher","_zone","_queries","Map","_destroySubject","next","complete","value","queries","splitQueries","some","mediaQuery","_registerQuery","mql","observables","map","observable","stateObservable","pipe","breakpointStates","response","breakpoints","forEach","state","get","queryObservable","observer","handler","run","nextMql","output","set","BreakpointObserver_Factory","split","reduce","a1","a2","concat","trim","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","mainContentRoutes","path","loadChildren","then","m","HomeModule","component","canActivate","MainContentRoutingModule","forChild","imports","exports","MainContentComponent","componentFactoryResolver","injector","gridService","compiler","changeDetectorRef","destory$","gridChangeObservable","activeGridSize","EXTRA_SMALL","activeView","detectChanges","largeScreenContentContainer","length","createLargeScreenConent","subscribe","mobileContentContainer","createMobileConent","MobileContentComponent","InternalMobileContentComponent","compileModuleAsync","ref","create","mobileContentFactory","resolveComponentFactory","createComponent","LargeScreenContentComponent","InternalLargeScreenContentModule","largeScreenContentFactory","clear","selector","templateUrl","styleUrls","read","MainContentModule","declarations","GridService","breakpointObserver","breakPoints","xs","sm","md","lg","xl","breakPointPxValues","observe","breakPointState","activeGrid","Object","keys","grid","breakPointPxValue","isBreakPoint","SMALL","MEDIUM","LARGE","EXTRA_LARGE","ALL"],"mappings":"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","file":"main-modules-main-content-main-content-module-es5.js","sourcesContent":["import { NgModule, Injectable, ɵɵdefineInjectable, ɵɵinject, NgZone } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport { coerceArray } from '@angular/cdk/coercion';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/layout-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nclass LayoutModule {\n}\nLayoutModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LayoutModule });\nLayoutModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LayoutModule_Factory(t) { return new (t || LayoutModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LayoutModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/media-matcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Global registry for all dynamically-created, injected media queries.\n * @type {?}\n */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/**\n * Style tag that holds all of the dynamically-created media queries.\n * @type {?}\n */\nlet mediaQueryStyleNode;\n/**\n * A utility for calling matchMedia queries.\n */\nclass MediaMatcher {\n    /**\n     * @param {?} _platform\n     */\n    constructor(_platform) {\n        this._platform = _platform;\n        this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     * @param {?} query\n     * @return {?}\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = function MediaMatcher_Factory(t) { return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\n/** @nocollapse */\nMediaMatcher.ctorParameters = () => [\n    { type: Platform }\n];\n/** @nocollapse */ MediaMatcher.ɵprov = ɵɵdefineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(ɵɵinject(Platform)); }, token: MediaMatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MediaMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\nif (false) {\n    /**\n     * The internal matchMedia method to return back a MediaQueryList like object.\n     * @type {?}\n     * @private\n     */\n    MediaMatcher.prototype._matchMedia;\n    /**\n     * @type {?}\n     * @private\n     */\n    MediaMatcher.prototype._platform;\n}\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n * @param {?} query\n * @return {?}\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            (/** @type {?} */ (document.head)).appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            ((/** @type {?} */ (mediaQueryStyleNode.sheet)))\n                .insertRule(`@media ${query} {.fx-query-test{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/**\n * No-op matchMedia replacement for non-browser platforms.\n * @param {?} query\n * @return {?}\n */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return (/** @type {?} */ ({\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: (/**\n         * @return {?}\n         */\n        () => { }),\n        removeListener: (/**\n         * @return {?}\n         */\n        () => { })\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/breakpoints-observer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The current state of a layout breakpoint.\n * @record\n */\nfunction BreakpointState() { }\nif (false) {\n    /**\n     * Whether the breakpoint is currently matching.\n     * @type {?}\n     */\n    BreakpointState.prototype.matches;\n    /**\n     * A key boolean pair for each query provided to the observe method,\n     * with its current matched state.\n     * @type {?}\n     */\n    BreakpointState.prototype.breakpoints;\n}\n/**\n * The current state of a layout breakpoint.\n * @record\n */\nfunction InternalBreakpointState() { }\nif (false) {\n    /**\n     * Whether the breakpoint is currently matching.\n     * @type {?}\n     */\n    InternalBreakpointState.prototype.matches;\n    /**\n     * The media query being to be matched\n     * @type {?}\n     */\n    InternalBreakpointState.prototype.query;\n}\n/**\n * @record\n */\nfunction Query() { }\nif (false) {\n    /** @type {?} */\n    Query.prototype.observable;\n    /** @type {?} */\n    Query.prototype.mql;\n}\n/**\n * Utility for checking the matching state of \\@media queries.\n */\nclass BreakpointObserver {\n    /**\n     * @param {?} _mediaMatcher\n     * @param {?} _zone\n     */\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**\n         * A map of all media queries currently being listened for.\n         */\n        this._queries = new Map();\n        /**\n         * A subject for all other observables to takeUntil based on.\n         */\n        this._destroySubject = new Subject();\n    }\n    /**\n     * Completes the active subject, signalling to all other observables to complete.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param {?} value One or more media queries to check.\n     * @return {?} Whether any of the media queries match.\n     */\n    isMatched(value) {\n        /** @type {?} */\n        const queries = splitQueries(coerceArray(value));\n        return queries.some((/**\n         * @param {?} mediaQuery\n         * @return {?}\n         */\n        mediaQuery => this._registerQuery(mediaQuery).mql.matches));\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param {?} value One or more media queries to check.\n     * @return {?} A stream of matches for the given queries.\n     */\n    observe(value) {\n        /** @type {?} */\n        const queries = splitQueries(coerceArray(value));\n        /** @type {?} */\n        const observables = queries.map((/**\n         * @param {?} query\n         * @return {?}\n         */\n        query => this._registerQuery(query).observable));\n        /** @type {?} */\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map((/**\n         * @param {?} breakpointStates\n         * @return {?}\n         */\n        (breakpointStates) => {\n            /** @type {?} */\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach((/**\n             * @param {?} state\n             * @return {?}\n             */\n            (state) => {\n                response.matches = response.matches || state.matches;\n                response.breakpoints[state.query] = state.matches;\n            }));\n            return response;\n        })));\n    }\n    /**\n     * Registers a specific query to be listened for.\n     * @private\n     * @param {?} query\n     * @return {?}\n     */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return (/** @type {?} */ (this._queries.get(query)));\n        }\n        /** @type {?} */\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        /** @type {?} */\n        const queryObservable = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            /** @type {?} */\n            const handler = (/**\n             * @param {?} e\n             * @return {?}\n             */\n            (e) => this._zone.run((/**\n             * @return {?}\n             */\n            () => observer.next(e))));\n            mql.addListener(handler);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                mql.removeListener(handler);\n            });\n        })).pipe(startWith(mql), map((/**\n         * @param {?} nextMql\n         * @return {?}\n         */\n        (nextMql) => ({ query, matches: nextMql.matches }))), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        /** @type {?} */\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) { return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nBreakpointObserver.ctorParameters = () => [\n    { type: MediaMatcher },\n    { type: NgZone }\n];\n/** @nocollapse */ BreakpointObserver.ɵprov = ɵɵdefineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(ɵɵinject(MediaMatcher), ɵɵinject(NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BreakpointObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MediaMatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * A map of all media queries currently being listened for.\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._queries;\n    /**\n     * A subject for all other observables to takeUntil based on.\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._destroySubject;\n    /**\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._mediaMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._zone;\n}\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n * @param {?} queries\n * @return {?}\n */\nfunction splitQueries(queries) {\n    return queries.map((/**\n     * @param {?} query\n     * @return {?}\n     */\n    (query) => query.split(',')))\n        .reduce((/**\n     * @param {?} a1\n     * @param {?} a2\n     * @return {?}\n     */\n    (a1, a2) => a1.concat(a2)))\n        .map((/**\n     * @param {?} query\n     * @return {?}\n     */\n    query => query.trim()));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/breakpoints.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @type {?}\n */\nconst Breakpoints = {\n    XSmall: '(max-width: 599.99px)',\n    Small: '(min-width: 600px) and (max-width: 959.99px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.99px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.99px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.99px) and (orientation: portrait), ' +\n        '(max-width: 959.99px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.99px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.99px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n\n//# sourceMappingURL=layout.js.map","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from '../../../shared/modules/auth/guards/auth-guard.service';\nimport { MainContentComponent } from './main-content.component';\n\nconst mainContentRoutes: Routes = [\n  {\n    path: '',\n    loadChildren: () => import('../../../shared/modules/home/home.module').then(m => m.HomeModule),\n    component: MainContentComponent,\n    canActivate: [AuthGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(mainContentRoutes)],\n  exports: [RouterModule],\n})\nexport class MainContentRoutingModule {\n}\n","<div id=\"page-container\">\n  <div id=\"content-wrap\">\n    <div *ngIf=\"activeView === 'mobile'\">\n      <ng-container #mobileContent></ng-container>\n    </div>\n    <div *ngIf=\"activeView === 'large-screen'\">\n      <ng-container #largeScreenContent></ng-container>\n    </div>\n  </div>\n</div>","import { Component, ViewChild, ViewContainerRef, ComponentFactoryResolver, Injector, OnInit, Compiler, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { tap, filter, takeUntil } from 'rxjs/operators';\nimport { GridSizes } from '../../../shared/static-files/enums';\nimport { GridService } from '../../../shared/services/grid/grid.service';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-main-content',\n  templateUrl: './main-content.component.html',\n  styleUrls: ['main-content.component.scss']\n})\nexport class MainContentComponent implements OnInit, OnDestroy {\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, \n              private injector: Injector,\n              private gridService: GridService,\n              private compiler: Compiler,\n              private changeDetectorRef: ChangeDetectorRef) {}\n\n  @ViewChild('mobileContent', { read: ViewContainerRef, static: false}) \n  public mobileContentContainer: ViewContainerRef;\n\n  @ViewChild('largeScreenContent', { read: ViewContainerRef, static: false}) \n  public largeScreenContentContainer: ViewContainerRef;\n\n  public activeView: string;\n\n  private destory$: Subject<void> = new Subject();\n\n  public ngOnInit(): void {\n    this.gridService.gridChangeObservable()\n      .pipe(\n        filter((activeGridSize: GridSizes) => activeGridSize !== GridSizes.EXTRA_SMALL && this.activeView !== 'large-screen'),\n        tap(() => this.activeView = 'large-screen'),\n        tap(() => this.changeDetectorRef.detectChanges()),\n        filter(() => !this.largeScreenContentContainer || this.largeScreenContentContainer.length === 0),\n        tap(() => this.createLargeScreenConent()),\n        takeUntil(this.destory$)\n    ).subscribe();\n\n    this.gridService.gridChangeObservable()\n      .pipe(\n        filter((activeGridSize: GridSizes) => activeGridSize === GridSizes.EXTRA_SMALL),\n        tap(() => this.activeView = 'mobile'),\n        tap(() => this.changeDetectorRef.detectChanges()),\n        filter(() => !this.mobileContentContainer || this.mobileContentContainer.length === 0),\n        tap(() => this.createMobileConent()),\n        takeUntil(this.destory$)\n      ).subscribe();\n  }\n\n  public async createMobileConent(): Promise<void> {\n    const { MobileContentComponent, InternalMobileContentComponent } = await import('./modules/mobile-content/mobile-content.component');\n    \n    const factory = await this.compiler.compileModuleAsync(InternalMobileContentComponent);\n    const ref = factory.create(this.injector);\n    \n    const mobileContentFactory = this.componentFactoryResolver.resolveComponentFactory(MobileContentComponent);\n    this.mobileContentContainer.createComponent(mobileContentFactory, null, this.injector, [], ref);\n  }\n\n  public async createLargeScreenConent(): Promise<void> {\n    const { LargeScreenContentComponent, InternalLargeScreenContentModule } = await import('./modules/larger-screen-content/large-screen-content.component');\n\n    const factory = await this.compiler.compileModuleAsync(InternalLargeScreenContentModule);\n    const ref = factory.create(this.injector);\n\n    const largeScreenContentFactory = this.componentFactoryResolver.resolveComponentFactory(LargeScreenContentComponent);\n\n    this.largeScreenContentContainer.createComponent(largeScreenContentFactory, null, this.injector, [], ref);\n  }\n\n  public ngOnDestroy(): void {\n    this.destory$.next();\n    this.destory$.complete();\n\n    this.mobileContentContainer?.clear();\n    this.largeScreenContentContainer?.clear();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MainContentComponent } from './main-content.component';\nimport { MainContentRoutingModule } from './main-content-routing.module';\n\n@NgModule({\n  declarations: [\n    MainContentComponent\n  ],\n  imports: [\n    CommonModule,\n    MainContentRoutingModule\n  ],\n})\nexport class MainContentModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BreakpointObserver, BreakpointState } from '@angular/cdk/layout';\nimport { map } from 'rxjs/operators';\nimport { GridSizes } from '../../static-files/enums';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GridService {\n\n  private breakPoints = {\n       xs: '(max-width: 575.99px)',\n        sm: '(min-width: 576px) and (max-width: 767px)',\n        md: '(min-width: 768px) and (max-width: 991px)',\n        lg: '(min-width: 992px) and (max-width: 1439px)',\n        xl: '(min-width: 1440px)'\n      };\n    \n      private breakPointPxValues = [\n        this.breakPoints.xs,\n        this.breakPoints.sm,\n        this.breakPoints.md,\n        this.breakPoints.lg,\n        this.breakPoints.xl\n      ];\n\n      constructor(private breakpointObserver: BreakpointObserver) {}\n\n  // TODO: write a unit test for this\n  public gridChangeObservable(): Observable<GridSizes> {\n        return this.breakpointObserver\n          .observe(this.breakPointPxValues)\n          .pipe(\n            map((breakPointState: BreakpointState) => {\n              let activeGrid: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n    \n              Object.keys(this.breakPoints).forEach((grid: 'xs' | 'sm' | 'md' | 'lg' | 'xl') => {\n                const breakPointPxValue = this.breakPoints[grid];\n                const isBreakPoint: boolean = breakPointState.breakpoints[breakPointPxValue];\n    \n                if (isBreakPoint === true) {\n                  activeGrid = grid;\n                  return;\n                }\n              });\n    \n              return activeGrid;\n            }),\n            map((activeGrid: 'xs' | 'sm' | 'md' | 'lg' | 'xl') => {\n              switch (activeGrid) {\n                case 'xs':\n                  return GridSizes.EXTRA_SMALL;\n                case 'sm':\n                  return GridSizes.SMALL;\n                case 'md':\n                  return GridSizes.MEDIUM;\n                case 'lg':\n                  return GridSizes.LARGE;\n                case 'xl':\n                  return GridSizes.EXTRA_LARGE;\n                default: \n                  return GridSizes.ALL;\n              }\n            })\n          );\n      }   \n}\n"]}