{"version":3,"sources":["./src/app/shared/modules/add-game/components/dialog-data/dialog-data.component.ts","./src/app/shared/modules/add-game/components/dialog-data/dialog-data.component.html","./src/app/shared/modules/add-game/components/dialog-data/game-result/game-result.component.ts","./src/app/shared/modules/add-game/components/dialog-data/game-result/game-result.component.html","./src/app/shared/modules/add-game/components/dialog-overview/dialog-overview.component.ts","./src/app/shared/modules/add-game/services/dialog-data/dialog-data.service.ts","./src/app/shared/modules/form/components/drop-down/drop-down.component.ts","./src/app/shared/modules/form/components/drop-down/drop-down.component.html","./src/app/shared/modules/form/components/drop-down/option-name/option-name.component.ts","./src/app/shared/modules/form/components/drop-down/option-name/option-name.component.html","./src/app/shared/modules/home/modules/game/factories/game.factory.ts","./src/app/shared/modules/home/modules/game/stores/user.store.ts"],"names":[],"mappings":"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","file":"default~shared-modules-add-game-add-game-module~shared-modules-add-game-components-dialog-overview-d~2141ce15-es2015.js","sourcesContent":["import {Component, Inject, OnDestroy, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Sides, Winners} from '../../../../static-files/enums';\nimport {Game} from '../../../../interfaces/game.interface';\nimport {DialogDataService} from '../../services/dialog-data/dialog-data.service';\nimport {User} from '../../../../interfaces/user.interface';\nimport {TranslateService} from '@ngx-translate/core';\nimport {AsyncBaseComponent} from '../../../async/components/async-base-component/async-base.component';\nimport { UsersStore } from '../../../home/modules/game/stores/user.store';\n\n@Component({\n  selector: 'app-dialog-data',\n  templateUrl: './dialog-data.component.html',\n})\nexport class DialogDataComponent extends AsyncBaseComponent implements OnInit, OnDestroy {\n\n  public users: User[];\n  public winners: Winners[] = [Winners.WHITE, Winners.BLACK, Winners.DRAW];\n\n  public Sides = Sides;\n\n  public winnerOptions: string[] = [];\n\n  constructor(public dialogRef: MatDialogRef<DialogDataComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: Game,\n              private userStore: UsersStore,\n              private dialogDataService: DialogDataService,\n              private translateService: TranslateService) {\n    super();\n  }\n\n  public ngOnInit(): void {\n    this.userStore\n      .get(this.destroy$)\n      .subscribe((users: User[]) => this.users = users);\n  }\n\n  public cancelEventHandler(): void {\n    this.dialogRef.close('cancelButton');\n  }\n\n  public determineAvailableUsersForSelect(selectName: string): User[] {\n    return this.dialogDataService.determineAvailableUsersForSelect(this.users, this.data, selectName);\n  }\n\n  public ifAllFieldsAreNotField(): boolean {\n    return !this.dialogDataService.allFieldsAreDefined(this.data);\n  }\n\n  public usersAreNotDefined(): boolean {\n    return !this.dialogDataService.userAreDefined(this.data);\n  }\n\n  public fieldUpdateHandler(game: Partial<Game>): void {\n    this.winnerOptions = [];\n\n    this.winnerOptions.push(game?.black);\n    this.winnerOptions.push(game?.white);\n\n    this.winnerOptions.push(this.translateService.instant('pages.home.games.labels.' + Winners.DRAW));\n  }\n}\n","<ui-game-result (cancelEvent)=\"cancelEventHandler()\"\n                (fieldUpdateEvent)=\"fieldUpdateHandler($event)\"\n                [data]=\"data\"\n                [disabled]=\"ifAllFieldsAreNotField()\"\n                [winnerFieldHidden]=\"usersAreNotDefined()\"\n                [usersBlack]=\"determineAvailableUsersForSelect(Sides.BLACK)\"\n                [usersWhite]=\"determineAvailableUsersForSelect(Sides.WHITE)\"\n                [winnerOptions]=\"winnerOptions\"\n                [winners]=\"winners\">\n</ui-game-result>\n","import {Component, EventEmitter, Input, Output, ViewChild} from '@angular/core';\nimport {ButtonFunction, ButtonType, GridSizes, Icons, Winners} from '../../../../../static-files/enums';\nimport {NgForm} from '@angular/forms';\nimport {Game} from '../../../../../interfaces/game.interface';\nimport {User} from '../../../../../interfaces/user.interface';\nimport {timer} from 'rxjs';\nimport {MatSelect} from '@angular/material/select';\n\n@Component({\n  selector: 'ui-game-result',\n  templateUrl: './game-result.component.html',\n  styleUrls: ['./game-result.component.scss'],\n})\nexport class GameResultComponent {\n\n  @ViewChild('form', {static: true})\n  public form: NgForm;\n\n  @ViewChild('whiteSelect', {static: true})\n  public whiteSelect: MatSelect;\n\n  @Input()\n  public data: Game;\n\n  @Input()\n  public winners: Winners[];\n\n  @Input()\n  public disabled: boolean;\n\n  @Input()\n  public usersWhite: User[];\n\n  @Input()\n  public usersBlack: User[];\n\n  @Input()\n  public winnerOptions: string[];\n\n  @Input()\n  public winnerFieldHidden: boolean;\n\n  @Output()\n  public fieldUpdateEvent: EventEmitter<Game> = new EventEmitter();\n\n  @Output()\n  public cancelEvent: EventEmitter<void> = new EventEmitter();\n\n  @Output()\n  public saveEvent: EventEmitter<void> = new EventEmitter();\n\n  public ButtonType = ButtonType;\n  public ButtonFunction = ButtonFunction;\n  public GridSizes = GridSizes;\n  public Icons = Icons;\n  public timer = timer;\n\n  public cancel(): void {\n    this.cancelEvent.emit();\n  }\n\n  public save(): void {\n    this.saveEvent.emit();\n  }\n\n  public fieldUpdated(): void {\n    this.fieldUpdateEvent.emit(this.data);\n  }\n}\n","<h1 appTranslate=\"pages.home.games.pop-up.title\" mat-dialog-title></h1>\n<div mat-dialog-content>\n  <form #form=\"ngForm\">\n    <div>\n      <app-drop-down id='white-user'\n                     [(value)]=\"data.white\"\n                     (valueChange)=\"fieldUpdated()\"\n                     [options]=\"usersWhite\"\n                     labelKey=\"pages.home.games.labels.white\"\n                     optionDisplayField=\"name\">\n      </app-drop-down>\n    </div>\n    <div>\n      <app-drop-down id='black-user'\n                     [(value)]=\"data.black\"\n                     (valueChange)=\"fieldUpdated()\"\n                     [options]=\"usersBlack\"\n                     labelKey=\"pages.home.games.labels.black\"\n                     optionDisplayField=\"name\">\n      </app-drop-down>\n    </div>\n    <!-- TODO: make this none special dropdown-->\n    <div>\n      <app-drop-down id='winner-user'\n                     [disabled]=\"winnerFieldHidden\"\n                     [(value)]=\"data.winner\"\n                     (valueChange)=\"fieldUpdated()\"\n                     [options]=\"winnerOptions\"\n                     labelKey=\"pages.home.games.labels.winner\">\n      </app-drop-down>\n    </div>\n  </form>\n</div>\n\n<div [appGridRow]=\"[GridSizes.ALL]\"\n     mat-dialog-actions>\n  <!-- TODO: app-button-row -->\n  <app-button (clickEvent)=\"cancel()\"\n              [appGridColumn]=\"[6]\"\n              [buttonFunction]=\"ButtonFunction.CANCEL\"\n              [buttonType]=\"ButtonType.SECONDARY\">\n  </app-button>\n\n  <app-button id=\"save\"\n              (clickEvent)=\"save()\"\n              [appGridColumn]=\"[6]\"\n              [buttonFunction]=\"ButtonFunction.SAVE\"\n              [buttonType]=\"ButtonType.PRIMARY\"\n              [dialogDataToSubmit]=\"data\"\n              [disabled]=\"disabled\">\n  </app-button>\n</div>\n","import {Component, EventEmitter, Output, OnInit} from '@angular/core';\nimport {DialogDataComponent} from '../dialog-data/dialog-data.component';\nimport {Game} from '../../../../interfaces/game.interface';\nimport {UtilService} from '../../../../services/util/util.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport { Router, RouterEvent, NavigationStart } from '@angular/router';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { GameFactory } from '../../../home/modules/game/factories/game.factory';\n\n@Component({\n  selector: 'app-dialog-overview',\n  template: ``,\n})\nexport class DialogOverviewComponent implements OnInit {\n\n  @Output()\n  public addEvent: EventEmitter<Game> = new EventEmitter();\n\n  @Output()\n  public cancelEvent: EventEmitter<Game> = new EventEmitter();\n\n  public game: Game = new GameFactory().create();\n\n  public unsubscriber$: Subject<void>;\n\n  constructor(public dialog: MatDialog,\n              private utilService: UtilService,\n              private router: Router) {\n  }\n  \n  public ngOnInit(): void {\n    this.openDialog();\n  }\n\n  public openDialog(): void {\n    this.unsubscriber$ = new Subject();\n\n    this.dialog.closeAll();\n    \n    const dialogRef = this.dialog.open(DialogDataComponent, {\n      data: {\n        white: this.game.white,\n        winner: this.game.winner,\n        black: this.game.black,\n      } as Game,\n      maxWidth: '250px'\n    });\n    \n    // No need to unsubscribe since it is a one off observable\n    dialogRef.afterClosed().subscribe((result: Game | string) => {\n      if (this.addEventIsReceived(result)) {\n        this.addEvent.emit(result as Game);\n      }\n\n      if (result === 'cancelButton') {\n        this.cancelEvent.emit();\n      }\n\n      this.unsubscriber$.next();\n    });\n\n    this.closeDialogWhenTheUrlChanges();\n  }\n\n  private closeDialogWhenTheUrlChanges(): void {\n    this.router.events\n      .pipe(\n        filter((event: RouterEvent) => event instanceof NavigationStart),\n        takeUntil(this.unsubscriber$)\n      )\n      .subscribe(() => this.dialog?.closeAll());\n  }\n\n  private addEventIsReceived(result: any): boolean {\n    return !this.utilService.isNullOrUndefined(result?.white);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {User} from '../../../../interfaces/user.interface';\nimport {Game} from '../../../../interfaces/game.interface';\nimport {UtilService} from '../../../../services/util/util.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DialogDataService {\n\n  constructor(private utilService: UtilService) {\n  }\n\n  public determineAvailableUsersForSelect(users: User[], game: Game, selectName: string): User[] {\n    const chosenUserName: string[] = [];\n\n    if (!this.utilService.isNullOrUndefined(game.white) && selectName !== 'white') {\n      chosenUserName.push(game.white);\n    }\n\n    if (!this.utilService.isNullOrUndefined(game.black) && selectName !== 'black') {\n      chosenUserName.push(game.black);\n    }\n\n    return users.filter((user: User) => chosenUserName.includes(user.name) === false);\n  }\n\n  public allFieldsAreDefined(game: Game): boolean {\n    return !this.utilService.isNullOrUndefined(game.white)\n      && !this.utilService.isNullOrUndefined(game.black)\n      && !this.utilService.isNullOrUndefined(game.winner);\n  }\n\n  public userAreDefined(game: Game): boolean {\n    return !this.utilService.isNullOrUndefined(game.white)\n    && !this.utilService.isNullOrUndefined(game.black);\n  }\n}\n","import {Component, EventEmitter, forwardRef, Input, Output, ViewChild} from '@angular/core';\nimport {ControlValueAccessor, DefaultValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {MatSelect} from '@angular/material/select';\n\n@Component({\n  selector: 'app-drop-down',\n  templateUrl: './drop-down.component.html',\n  styleUrls: ['./drop-down.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DropDownComponent),\n      multi: true,\n    },\n  ]\n})\nexport class DropDownComponent implements ControlValueAccessor {\n\n  @Input()\n  public id: string;\n\n  @Input()\n  public value: any;\n\n  @Input()\n  public options: any[];\n\n  @Input()\n  public optionDisplayField: string;\n\n  @Input()\n  public labelKey: string;\n\n  @Input()\n  public disabled = false;\n\n  @Output()\n  public removeOptionEvent: EventEmitter<void> = new EventEmitter();\n\n  @Output()\n  public valueChange: EventEmitter<string> = new EventEmitter();\n\n  @ViewChild(DefaultValueAccessor, {static: true})\n  public valueAccessor: DefaultValueAccessor;\n\n  @ViewChild('select', {static: true})\n  public select: MatSelect;\n\n  public writeValue(obj: any): void {\n    this.valueAccessor.writeValue(obj);\n  }\n\n  public registerOnChange(fn: any): void {\n    this.valueAccessor.registerOnChange(fn);\n  }\n\n  public registerOnTouched(fn: any): void {\n    this.valueAccessor.registerOnTouched(fn);\n  }\n\n  public setDisabledState(isDisabled: boolean): void {\n    this.valueAccessor.setDisabledState(isDisabled);\n  }\n\n  public removeOption(): void {\n    this.select.ngControl.reset();\n    this.valueChange.emit(null);\n    this.select.close();\n  }\n\n  public getOptionName(option: any): any {\n    return this.optionDisplayField ? option[this.optionDisplayField] : option;\n  }\n\n}\n","<mat-form-field>\n  <mat-label [appTranslate]=\"labelKey\"></mat-label>\n  <mat-select #select (valueChange)=\"valueChange.emit($event)\" [(ngModel)]=\"value\" [id]=\"id\" [disabled]=\"disabled\">\n    <mat-option *ngFor=\"let option of options\" [value]=\"getOptionName(option)\">\n      <app-option-name (iconClickEvent)=\"removeOption()\"\n                       [showIcon]=\"getOptionName(option) === value && select.panelOpen\"\n                       [value]=\"getOptionName(option)\"\n                       [id]=\"getOptionName(option)\">\n      </app-option-name>\n    </mat-option>\n  </mat-select>\n</mat-form-field>\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {Icons, IconSize} from '../../../../../static-files/enums';\n\n@Component({\n  selector: 'app-option-name',\n  templateUrl: './option-name.component.html',\n  styleUrls: ['./option-name.component.scss'],\n})\nexport class OptionNameComponent {\n\n  @Input()\n  public value: string;\n\n  @Input()\n  public showIcon: boolean;\n\n  @Output()\n  public iconClickEvent: EventEmitter<void> = new EventEmitter();\n\n  public Icons = Icons;\n  public IconSize = IconSize;\n\n  public iconClick(): void {\n    this.iconClickEvent.emit();\n  }\n}\n","{{value?.substring(0, 15)}}<span *ngIf=\"value?.length > 15\">...</span>\n<!-- TODO: tooltip when longer than 15 chars -->\n<app-icon (click)=\"iconClick(); $event.stopPropagation();\"\n          *ngIf=\"showIcon\"\n          [iconSize]=\"IconSize.SMALL\"\n          [icon]=\"Icons.DELETE\"\n          class=\"float\">\n</app-icon>\n","import {Factory} from '../../../../../../shared/interfaces/factory.interface';\nimport {Game} from '../../../../../../shared/interfaces/game.interface';\n\nexport class GameFactory implements Factory<Game> {\n  public create(game?: Game): Game {\n    return {\n      black: game ? game.black : null,\n      winner: game ? game.winner : null,\n      white: game ? game.white : null,\n    };\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Store} from '../../../../../../shared/services/store';\nimport {User} from '../../../../../../shared/interfaces/user.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersStore extends Store<User[]> {\n}\n"],"sourceRoot":"webpack:///"}