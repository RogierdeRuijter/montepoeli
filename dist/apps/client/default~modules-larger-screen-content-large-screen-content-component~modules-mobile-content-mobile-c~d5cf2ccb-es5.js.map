{"version":3,"sources":["webpack:///Users/rogierderuijter/Projects/montepoeli/node_modules/@angular/material/__ivy_ngcc__/fesm2015/toolbar.js","webpack:///src/app/shared/modules/user-action/components/user-actions/user-actions.component.ts","webpack:///src/app/shared/modules/user-action/components/user-actions/user-actions.component.html","webpack:///src/app/shared/modules/user-action/user-action.module.ts"],"names":["_c0","_c1","MatToolbarBase","_elementRef","_MatToolbarMixinBase","MatToolbarRow","ɵfac","MatToolbarRow_Factory","t","ɵdir","type","selectors","hostAttrs","exportAs","args","selector","host","MatToolbar","elementRef","_platform","document","_document","isBrowser","_checkToolbarMixedModes","_toolbarRows","changes","subscribe","length","isCombinedUsage","Array","from","nativeElement","childNodes","filter","node","classList","contains","nodeType","COMMENT_NODE","some","textContent","trim","throwToolbarMixedModesError","MatToolbar_Factory","ɵcmp","contentQueries","MatToolbar_ContentQueries","rf","ctx","dirIndex","_t","hostVars","hostBindings","MatToolbar_HostBindings","inputs","color","features","ngContentSelectors","decls","vars","template","MatToolbar_Template","styles","encapsulation","changeDetection","ctorParameters","undefined","decorators","propDecorators","descendants","OnPush","None","Error","MatToolbarModule","ɵmod","ɵinj","factory","MatToolbarModule_Factory","imports","ngJitMode","declarations","exports","UserActionsComponent","authService","translateService","languagePreferenceService","userStoreService","changeDetectorRef","notificationService","Icons","IconSize","destory$","setAlternativeLanguage","get","user","onLangChange","pipe","langObject","lang","info","instant","currentLang","alternativeLanguage","getLangs","find","lang1","setIconLanguage","detectChanges","userSettingsDropDown","open","waitForDropDownToClose","setWithLanguageCode","logout","next","complete","userIconHandler","switchLanguageHandler","logoutHandler","templateUrl","styleUrls","UserActionModule"],"mappings":"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","file":"default~modules-larger-screen-content-large-screen-content-component~modules-mobile-content-mobile-c~d5cf2ccb-es5.js","sourcesContent":["import { Directive, isDevMode, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/toolbar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatToolbar.\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\n\nconst _c0 = [\"*\", [[\"mat-toolbar-row\"]]];\nconst _c1 = [\"*\", \"mat-toolbar-row\"];\nclass MatToolbarBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatToolbarBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatToolbarMixinBase = mixinColor(MatToolbarBase);\nclass MatToolbarRow {\n}\nMatToolbarRow.ɵfac = function MatToolbarRow_Factory(t) { return new (t || MatToolbarRow)(); };\nMatToolbarRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatToolbarRow, selectors: [[\"mat-toolbar-row\"]], hostAttrs: [1, \"mat-toolbar-row\"], exportAs: [\"matToolbarRow\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbarRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-toolbar-row',\n                exportAs: 'matToolbarRow',\n                host: { 'class': 'mat-toolbar-row' }\n            }]\n    }], null, null); })();\nclass MatToolbar extends _MatToolbarMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _platform\n     * @param {?=} document\n     */\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!isDevMode() || !this._platform.isBrowser) {\n            return;\n        }\n        this._checkToolbarMixedModes();\n        this._toolbarRows.changes.subscribe((/**\n         * @return {?}\n         */\n        () => this._checkToolbarMixedModes()));\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     * @private\n     * @return {?}\n     */\n    _checkToolbarMixedModes() {\n        if (!this._toolbarRows.length) {\n            return;\n        }\n        // Check if there are any other DOM nodes that can display content but aren't inside of\n        // a <mat-toolbar-row> element.\n        /** @type {?} */\n        const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n            .filter((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => !(node.classList && node.classList.contains('mat-toolbar-row'))))\n            .filter((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8)))\n            .some((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => !!(node.textContent && node.textContent.trim())));\n        if (isCombinedUsage) {\n            throwToolbarMixedModesError();\n        }\n    }\n}\nMatToolbar.ɵfac = function MatToolbar_Factory(t) { return new (t || MatToolbar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatToolbar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatToolbar, selectors: [[\"mat-toolbar\"]], contentQueries: function MatToolbar_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatToolbarRow, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._toolbarRows = _t);\n    } }, hostAttrs: [1, \"mat-toolbar\"], hostVars: 4, hostBindings: function MatToolbar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-toolbar-multiple-rows\", ctx._toolbarRows.length > 0)(\"mat-toolbar-single-row\", ctx._toolbarRows.length === 0);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matToolbar\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatToolbar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatToolbar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nMatToolbar.propDecorators = {\n    _toolbarRows: [{ type: ContentChildren, args: [MatToolbarRow, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-toolbar',\n                exportAs: 'matToolbar',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\",\n                inputs: ['color'],\n                host: {\n                    'class': 'mat-toolbar',\n                    '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                    '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { _toolbarRows: [{\n            type: ContentChildren,\n            args: [MatToolbarRow, { descendants: true }]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatToolbar.prototype._document;\n    /**\n     * Reference to all toolbar row elements that have been projected.\n     * @type {?}\n     */\n    MatToolbar.prototype._toolbarRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatToolbar.prototype._platform;\n}\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * \\@docs-private\n * @return {?}\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/toolbar-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatToolbarModule {\n}\nMatToolbarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatToolbarModule });\nMatToolbarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatToolbarModule_Factory(t) { return new (t || MatToolbarModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatToolbarModule, { declarations: function () { return [MatToolbar,\n        MatToolbarRow]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatToolbar,\n        MatToolbarRow,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                declarations: [MatToolbar, MatToolbarRow]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n\n//# sourceMappingURL=toolbar.js.map","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { IconColor, Icons, IconSize } from '../../../../static-files/enums';\nimport { MatSelect } from '@angular/material/select';\nimport { AuthService } from '../../../auth/services/auth/auth.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LanguagePreferenceService } from '../../../translate/services/language-preference.service';\nimport { Subject, timer, Observable } from 'rxjs';\nimport { UserStoreService } from '../../../user/store/user-store.service';\nimport { User } from '../../../../interfaces/user.interface';\nimport { NotificationService } from '../../../notification/services/notification/notification.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-user-actions',\n  templateUrl: './user-actions.component.html',\n  styleUrls: ['./user-actions.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UserActionsComponent implements OnInit, OnDestroy {\n\n  @ViewChild('userSettingsDropDown')\n  public userSettingsDropDown: MatSelect;\n\n  @Input()\n  public settingsIconColor: IconColor;\n\n  public Icons = Icons;\n  public IconSize = IconSize;\n\n  public alternativeLanguage: string;\n  public setIconLanguage: string;\n\n  private user: User;\n  private destory$: Subject<void> = new Subject();\n\n  constructor(private authService: AuthService,\n              private translateService: TranslateService,\n              private languagePreferenceService: LanguagePreferenceService,\n              private userStoreService: UserStoreService,\n              private changeDetectorRef: ChangeDetectorRef,\n              private notificationService: NotificationService) { }\n\n  public ngOnInit(): void {\n    this.setAlternativeLanguage();\n\n    this.userStoreService.get(this.destory$)\n      .subscribe((user: User) => this.user = user);\n\n    this.translateService.onLangChange\n      .pipe(\n        takeUntil(this.destory$)\n      )\n      .subscribe((langObject: any) => {\n        const lang = langObject.lang;\n\n        if (lang === 'en') {\n          this.notificationService.info(this.translateService.instant('info.language-changed.english'));\n        }\n    \n        if (lang === 'nl') {\n          this.notificationService.info(this.translateService.instant('info.language-changed.dutch'));\n        }\n\n        this.setAlternativeLanguage(lang);\n    });\n  }\n\n  private setAlternativeLanguage(lang?: string): void {\n    const currentLang = lang ? lang : this.translateService.currentLang;\n    \n    this.alternativeLanguage = this.translateService.getLangs().find(lang1 => lang1 !== currentLang);\n    \n    if (this.alternativeLanguage === 'en') {\n      this.setIconLanguage = 'ie';\n    }\n\n    if (this.alternativeLanguage === 'nl') {\n      this.setIconLanguage = 'nl';\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n  public userIconHandler(): void {\n    this.userSettingsDropDown.open();\n  }\n\n  public switchLanguageHandler(): void {\n    this.waitForDropDownToClose()\n      .subscribe(() => this.languagePreferenceService.setWithLanguageCode(this.user, this.alternativeLanguage));\n  }\n\n  private waitForDropDownToClose(): Observable<any> {\n    return timer(300);\n  }\n\n  public logoutHandler(): void {\n    this.authService.logout();\n  }\n\n  public ngOnDestroy(): void {\n    this.destory$.next();\n    this.destory$.complete();\n  }\n}\n","<app-button-icon id=\"user-settings\"\n                 [icon]=\"Icons.USER\"\n                 [iconSize]=\"IconSize.SMALL_MEDIUM\"\n                 (clickEvent)=\"userIconHandler()\">\n</app-button-icon>\n\n<mat-select #userSettingsDropDown class=\"selector\">\n  <mat-option (click)=\"switchLanguageHandler()\" [id]=\"alternativeLanguage\">\n    <div class=\"d-flex justify-content-center\">\n      <!-- [class]=\"setIconLanguage === 'ie' ? 'ie' : 'nl'\" -->\n      <img *ngIf=\"setIconLanguage === 'ie'\" style=\"width: 35px;\" src=\"../../../../../../assets/images/ie.svg\">\n      <img *ngIf=\"setIconLanguage === 'nl'\" style=\"width: 35px;\" src=\"../../../../../../assets/images/nl.svg\">\n    </div>\n  </mat-option>\n  <mat-option (click)=\"logoutHandler()\" id=\"logout\">\n      <span [appTranslate]=\"'user-actions.logout'\"></span>\n  </mat-option>\n</mat-select>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport {IconModule} from '../icon/icon.module';\nimport {ButtonModule} from '../button/button.module';\nimport {UserActionsComponent} from './components/user-actions/user-actions.component';\nimport { CustomTranslateModule } from '../translate/custom-translate.module';\n\n@NgModule({\n  declarations: [UserActionsComponent],\n  exports: [UserActionsComponent],\n  imports: [\n    CommonModule,\n    MatSelectModule,\n    MatOptionModule,\n    IconModule,\n    ButtonModule,\n    CustomTranslateModule\n  ]\n})\nexport class UserActionModule { }\n"]}