{"version":3,"sources":["webpack:///src/app/shared/modules/add-game/components/dialog-data/dialog-data.component.ts","webpack:///src/app/shared/modules/add-game/components/dialog-data/dialog-data.component.html","webpack:///src/app/shared/modules/add-game/components/dialog-data/game-result/game-result.component.ts","webpack:///src/app/shared/modules/add-game/components/dialog-data/game-result/game-result.component.html","webpack:///src/app/shared/modules/add-game/components/dialog-overview/dialog-overview.component.ts","webpack:///src/app/shared/modules/add-game/services/dialog-data/dialog-data.service.ts","webpack:///src/app/shared/modules/form/components/drop-down/drop-down.component.ts","webpack:///src/app/shared/modules/form/components/drop-down/drop-down.component.html","webpack:///src/app/shared/modules/form/components/drop-down/option-name/option-name.component.ts","webpack:///src/app/shared/modules/form/components/drop-down/option-name/option-name.component.html","webpack:///src/app/shared/modules/home/modules/game/factories/game.factory.ts","webpack:///src/app/shared/modules/home/modules/game/stores/user.store.ts"],"names":["DialogDataComponent","dialogRef","data","userStore","dialogDataService","translateService","winners","WHITE","BLACK","DRAW","Sides","winnerOptions","get","destroy$","subscribe","users","close","selectName","determineAvailableUsersForSelect","allFieldsAreDefined","userAreDefined","game","push","black","white","instant","cancelEventHandler","fieldUpdateHandler","selector","templateUrl","GameResultComponent","fieldUpdateEvent","cancelEvent","saveEvent","ButtonType","ButtonFunction","GridSizes","Icons","timer","emit","fieldUpdated","cancel","save","styleUrls","DialogOverviewComponent","dialog","utilService","router","addEvent","create","openDialog","unsubscriber$","closeAll","open","winner","maxWidth","afterClosed","result","addEventIsReceived","next","closeDialogWhenTheUrlChanges","events","pipe","event","isNullOrUndefined","template","DialogDataService","chosenUserName","filter","user","includes","name","providedIn","DropDownComponent","disabled","removeOptionEvent","valueChange","obj","valueAccessor","writeValue","fn","registerOnChange","registerOnTouched","isDisabled","setDisabledState","select","ngControl","reset","option","optionDisplayField","provide","useExisting","multi","providers","$event","stopPropagation","OptionNameComponent","iconClickEvent","IconSize","GameFactory","UsersStore"],"mappings":"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","file":"default~shared-modules-add-game-add-game-module~shared-modules-add-game-components-dialog-overview-d~2141ce15-es5.js","sourcesContent":["import {Component, Inject, OnDestroy, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Sides, Winners} from '../../../../static-files/enums';\nimport {Game} from '../../../../interfaces/game.interface';\nimport {DialogDataService} from '../../services/dialog-data/dialog-data.service';\nimport {User} from '../../../../interfaces/user.interface';\nimport {TranslateService} from '@ngx-translate/core';\nimport {AsyncBaseComponent} from '../../../async/components/async-base-component/async-base.component';\nimport { UsersStore } from '../../../home/modules/game/stores/user.store';\n\n@Component({\n  selector: 'app-dialog-data',\n  templateUrl: './dialog-data.component.html',\n})\nexport class DialogDataComponent extends AsyncBaseComponent implements OnInit, OnDestroy {\n\n  public users: User[];\n  public winners: Winners[] = [Winners.WHITE, Winners.BLACK, Winners.DRAW];\n\n  public Sides = Sides;\n\n  public winnerOptions: string[] = [];\n\n  constructor(public dialogRef: MatDialogRef<DialogDataComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: Game,\n              private userStore: UsersStore,\n              private dialogDataService: DialogDataService,\n              private translateService: TranslateService) {\n    super();\n  }\n\n  public ngOnInit(): void {\n    this.userStore\n      .get(this.destroy$)\n      .subscribe((users: User[]) => this.users = users);\n  }\n\n  public cancelEventHandler(): void {\n    this.dialogRef.close('cancelButton');\n  }\n\n  public determineAvailableUsersForSelect(selectName: string): User[] {\n    return this.dialogDataService.determineAvailableUsersForSelect(this.users, this.data, selectName);\n  }\n\n  public ifAllFieldsAreNotField(): boolean {\n    return !this.dialogDataService.allFieldsAreDefined(this.data);\n  }\n\n  public usersAreNotDefined(): boolean {\n    return !this.dialogDataService.userAreDefined(this.data);\n  }\n\n  public fieldUpdateHandler(game: Partial<Game>): void {\n    this.winnerOptions = [];\n\n    this.winnerOptions.push(game?.black);\n    this.winnerOptions.push(game?.white);\n\n    this.winnerOptions.push(this.translateService.instant('pages.home.games.labels.' + Winners.DRAW));\n  }\n}\n","<ui-game-result (cancelEvent)=\"cancelEventHandler()\"\n                (fieldUpdateEvent)=\"fieldUpdateHandler($event)\"\n                [data]=\"data\"\n                [disabled]=\"ifAllFieldsAreNotField()\"\n                [winnerFieldHidden]=\"usersAreNotDefined()\"\n                [usersBlack]=\"determineAvailableUsersForSelect(Sides.BLACK)\"\n                [usersWhite]=\"determineAvailableUsersForSelect(Sides.WHITE)\"\n                [winnerOptions]=\"winnerOptions\"\n                [winners]=\"winners\">\n</ui-game-result>\n","import {Component, EventEmitter, Input, Output, ViewChild} from '@angular/core';\nimport {ButtonFunction, ButtonType, GridSizes, Icons, Winners} from '../../../../../static-files/enums';\nimport {NgForm} from '@angular/forms';\nimport {Game} from '../../../../../interfaces/game.interface';\nimport {User} from '../../../../../interfaces/user.interface';\nimport {timer} from 'rxjs';\nimport {MatSelect} from '@angular/material/select';\n\n@Component({\n  selector: 'ui-game-result',\n  templateUrl: './game-result.component.html',\n  styleUrls: ['./game-result.component.scss'],\n})\nexport class GameResultComponent {\n\n  @ViewChild('form', {static: true})\n  public form: NgForm;\n\n  @ViewChild('whiteSelect', {static: true})\n  public whiteSelect: MatSelect;\n\n  @Input()\n  public data: Game;\n\n  @Input()\n  public winners: Winners[];\n\n  @Input()\n  public disabled: boolean;\n\n  @Input()\n  public usersWhite: User[];\n\n  @Input()\n  public usersBlack: User[];\n\n  @Input()\n  public winnerOptions: string[];\n\n  @Input()\n  public winnerFieldHidden: boolean;\n\n  @Output()\n  public fieldUpdateEvent: EventEmitter<Game> = new EventEmitter();\n\n  @Output()\n  public cancelEvent: EventEmitter<void> = new EventEmitter();\n\n  @Output()\n  public saveEvent: EventEmitter<void> = new EventEmitter();\n\n  public ButtonType = ButtonType;\n  public ButtonFunction = ButtonFunction;\n  public GridSizes = GridSizes;\n  public Icons = Icons;\n  public timer = timer;\n\n  public cancel(): void {\n    this.cancelEvent.emit();\n  }\n\n  public save(): void {\n    this.saveEvent.emit();\n  }\n\n  public fieldUpdated(): void {\n    this.fieldUpdateEvent.emit(this.data);\n  }\n}\n","<h1 appTranslate=\"pages.home.games.pop-up.title\" mat-dialog-title></h1>\n<div mat-dialog-content>\n  <form #form=\"ngForm\">\n    <div>\n      <app-drop-down id='white-user'\n                     [(value)]=\"data.white\"\n                     (valueChange)=\"fieldUpdated()\"\n                     [options]=\"usersWhite\"\n                     labelKey=\"pages.home.games.labels.white\"\n                     optionDisplayField=\"name\">\n      </app-drop-down>\n    </div>\n    <div>\n      <app-drop-down id='black-user'\n                     [(value)]=\"data.black\"\n                     (valueChange)=\"fieldUpdated()\"\n                     [options]=\"usersBlack\"\n                     labelKey=\"pages.home.games.labels.black\"\n                     optionDisplayField=\"name\">\n      </app-drop-down>\n    </div>\n    <!-- TODO: make this none special dropdown-->\n    <div>\n      <app-drop-down id='winner-user'\n                     [disabled]=\"winnerFieldHidden\"\n                     [(value)]=\"data.winner\"\n                     (valueChange)=\"fieldUpdated()\"\n                     [options]=\"winnerOptions\"\n                     labelKey=\"pages.home.games.labels.winner\">\n      </app-drop-down>\n    </div>\n  </form>\n</div>\n\n<div [appGridRow]=\"[GridSizes.ALL]\"\n     mat-dialog-actions>\n  <!-- TODO: app-button-row -->\n  <app-button (clickEvent)=\"cancel()\"\n              [appGridColumn]=\"[6]\"\n              [buttonFunction]=\"ButtonFunction.CANCEL\"\n              [buttonType]=\"ButtonType.SECONDARY\">\n  </app-button>\n\n  <app-button id=\"save\"\n              (clickEvent)=\"save()\"\n              [appGridColumn]=\"[6]\"\n              [buttonFunction]=\"ButtonFunction.SAVE\"\n              [buttonType]=\"ButtonType.PRIMARY\"\n              [dialogDataToSubmit]=\"data\"\n              [disabled]=\"disabled\">\n  </app-button>\n</div>\n","import {Component, EventEmitter, Output, OnInit} from '@angular/core';\nimport {DialogDataComponent} from '../dialog-data/dialog-data.component';\nimport {Game} from '../../../../interfaces/game.interface';\nimport {UtilService} from '../../../../services/util/util.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport { Router, RouterEvent, NavigationStart } from '@angular/router';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { GameFactory } from '../../../home/modules/game/factories/game.factory';\n\n@Component({\n  selector: 'app-dialog-overview',\n  template: ``,\n})\nexport class DialogOverviewComponent implements OnInit {\n\n  @Output()\n  public addEvent: EventEmitter<Game> = new EventEmitter();\n\n  @Output()\n  public cancelEvent: EventEmitter<Game> = new EventEmitter();\n\n  public game: Game = new GameFactory().create();\n\n  public unsubscriber$: Subject<void>;\n\n  constructor(public dialog: MatDialog,\n              private utilService: UtilService,\n              private router: Router) {\n  }\n  \n  public ngOnInit(): void {\n    this.openDialog();\n  }\n\n  public openDialog(): void {\n    this.unsubscriber$ = new Subject();\n\n    this.dialog.closeAll();\n    \n    const dialogRef = this.dialog.open(DialogDataComponent, {\n      data: {\n        white: this.game.white,\n        winner: this.game.winner,\n        black: this.game.black,\n      } as Game,\n      maxWidth: '250px'\n    });\n    \n    // No need to unsubscribe since it is a one off observable\n    dialogRef.afterClosed().subscribe((result: Game | string) => {\n      if (this.addEventIsReceived(result)) {\n        this.addEvent.emit(result as Game);\n      }\n\n      if (result === 'cancelButton') {\n        this.cancelEvent.emit();\n      }\n\n      this.unsubscriber$.next();\n    });\n\n    this.closeDialogWhenTheUrlChanges();\n  }\n\n  private closeDialogWhenTheUrlChanges(): void {\n    this.router.events\n      .pipe(\n        filter((event: RouterEvent) => event instanceof NavigationStart),\n        takeUntil(this.unsubscriber$)\n      )\n      .subscribe(() => this.dialog?.closeAll());\n  }\n\n  private addEventIsReceived(result: any): boolean {\n    return !this.utilService.isNullOrUndefined(result?.white);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {User} from '../../../../interfaces/user.interface';\nimport {Game} from '../../../../interfaces/game.interface';\nimport {UtilService} from '../../../../services/util/util.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DialogDataService {\n\n  constructor(private utilService: UtilService) {\n  }\n\n  public determineAvailableUsersForSelect(users: User[], game: Game, selectName: string): User[] {\n    const chosenUserName: string[] = [];\n\n    if (!this.utilService.isNullOrUndefined(game.white) && selectName !== 'white') {\n      chosenUserName.push(game.white);\n    }\n\n    if (!this.utilService.isNullOrUndefined(game.black) && selectName !== 'black') {\n      chosenUserName.push(game.black);\n    }\n\n    return users.filter((user: User) => chosenUserName.includes(user.name) === false);\n  }\n\n  public allFieldsAreDefined(game: Game): boolean {\n    return !this.utilService.isNullOrUndefined(game.white)\n      && !this.utilService.isNullOrUndefined(game.black)\n      && !this.utilService.isNullOrUndefined(game.winner);\n  }\n\n  public userAreDefined(game: Game): boolean {\n    return !this.utilService.isNullOrUndefined(game.white)\n    && !this.utilService.isNullOrUndefined(game.black);\n  }\n}\n","import {Component, EventEmitter, forwardRef, Input, Output, ViewChild} from '@angular/core';\nimport {ControlValueAccessor, DefaultValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {MatSelect} from '@angular/material/select';\n\n@Component({\n  selector: 'app-drop-down',\n  templateUrl: './drop-down.component.html',\n  styleUrls: ['./drop-down.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DropDownComponent),\n      multi: true,\n    },\n  ]\n})\nexport class DropDownComponent implements ControlValueAccessor {\n\n  @Input()\n  public id: string;\n\n  @Input()\n  public value: any;\n\n  @Input()\n  public options: any[];\n\n  @Input()\n  public optionDisplayField: string;\n\n  @Input()\n  public labelKey: string;\n\n  @Input()\n  public disabled = false;\n\n  @Output()\n  public removeOptionEvent: EventEmitter<void> = new EventEmitter();\n\n  @Output()\n  public valueChange: EventEmitter<string> = new EventEmitter();\n\n  @ViewChild(DefaultValueAccessor, {static: true})\n  public valueAccessor: DefaultValueAccessor;\n\n  @ViewChild('select', {static: true})\n  public select: MatSelect;\n\n  public writeValue(obj: any): void {\n    this.valueAccessor.writeValue(obj);\n  }\n\n  public registerOnChange(fn: any): void {\n    this.valueAccessor.registerOnChange(fn);\n  }\n\n  public registerOnTouched(fn: any): void {\n    this.valueAccessor.registerOnTouched(fn);\n  }\n\n  public setDisabledState(isDisabled: boolean): void {\n    this.valueAccessor.setDisabledState(isDisabled);\n  }\n\n  public removeOption(): void {\n    this.select.ngControl.reset();\n    this.valueChange.emit(null);\n    this.select.close();\n  }\n\n  public getOptionName(option: any): any {\n    return this.optionDisplayField ? option[this.optionDisplayField] : option;\n  }\n\n}\n","<mat-form-field>\n  <mat-label [appTranslate]=\"labelKey\"></mat-label>\n  <mat-select #select (valueChange)=\"valueChange.emit($event)\" [(ngModel)]=\"value\" [id]=\"id\" [disabled]=\"disabled\">\n    <mat-option *ngFor=\"let option of options\" [value]=\"getOptionName(option)\">\n      <app-option-name (iconClickEvent)=\"removeOption()\"\n                       [showIcon]=\"getOptionName(option) === value && select.panelOpen\"\n                       [value]=\"getOptionName(option)\"\n                       [id]=\"getOptionName(option)\">\n      </app-option-name>\n    </mat-option>\n  </mat-select>\n</mat-form-field>\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {Icons, IconSize} from '../../../../../static-files/enums';\n\n@Component({\n  selector: 'app-option-name',\n  templateUrl: './option-name.component.html',\n  styleUrls: ['./option-name.component.scss'],\n})\nexport class OptionNameComponent {\n\n  @Input()\n  public value: string;\n\n  @Input()\n  public showIcon: boolean;\n\n  @Output()\n  public iconClickEvent: EventEmitter<void> = new EventEmitter();\n\n  public Icons = Icons;\n  public IconSize = IconSize;\n\n  public iconClick(): void {\n    this.iconClickEvent.emit();\n  }\n}\n","{{value?.substring(0, 15)}}<span *ngIf=\"value?.length > 15\">...</span>\n<!-- TODO: tooltip when longer than 15 chars -->\n<app-icon (click)=\"iconClick(); $event.stopPropagation();\"\n          *ngIf=\"showIcon\"\n          [iconSize]=\"IconSize.SMALL\"\n          [icon]=\"Icons.DELETE\"\n          class=\"float\">\n</app-icon>\n","import {Factory} from '../../../../../../shared/interfaces/factory.interface';\nimport {Game} from '../../../../../../shared/interfaces/game.interface';\n\nexport class GameFactory implements Factory<Game> {\n  public create(game?: Game): Game {\n    return {\n      black: game ? game.black : null,\n      winner: game ? game.winner : null,\n      white: game ? game.white : null,\n    };\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Store} from '../../../../../../shared/services/store';\nimport {User} from '../../../../../../shared/interfaces/user.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersStore extends Store<User[]> {\n}\n"]}