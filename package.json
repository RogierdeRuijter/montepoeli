{
  "name": "montepouli",
  "version": "1.0.0",
  "license": "MIT",
  "scripts": {
    "build:client": "docker build client -t montepouli_client:latest",
    "build:e2e-client": "docker build -f client/Dockerfile.configured client -t montepouli_client:e2e --build-arg CLIENT_BASE_IMAGE_NAME=montepouli_client --build-arg CLIENT_BASE_IMAGE_TAG=latest --build-arg CLIENT_TYPE=e2e",
    "build:server": "docker build server -t montepouli_server:latest",
    "build-app": "npm run build:client && npm run build:server",
    "build-e2e-app": "npm run build:client && npm run build:e2e-client && npm run build:server",
    "build:e2e-environment": "docker-compose -f docker-compose-e2e.yml build --parallel",
    "pull:e2e-environment": "docker-compose -f docker-compose-e2e.yml pull --ignore-pull-failures",
    "restart:e2e-db": "docker-compose -f docker-compose-e2e.yml up --force-recreate -d mongodb-e2e ",
    "start": "npm run docker-compose-rebuild",
    "start:e2e-environment-base": "(npm run build:e2e-environment & npm run pull:e2e-environment) && npm run restart:e2e-db && docker-compose -f docker-compose-e2e.yml up",
    "start:e2e-environment": "npm run build-e2e-app && npm run start:e2e-environment-base -- -d",
    "start:e2e-environment-build-server": "npm run start:e2e-environment-base -- --abort-on-container-exit",
    "start:e2e-tests": "docker-compose -f docker-compose-e2e.yml build e2e-tests && docker-compose -f docker-compose-e2e.yml up -d e2e-tests",
    "stop": "docker-compose down",
    "stop:e2e-environment": "docker-compose -f docker-compose-e2e.yml down",
    "docker-compose-rebuild": "docker-compose build --parallel && docker-compose down && docker-compose up -d",
    "docker-compose-rebuild-no-cache": "docker-compose build --no-cache && docker-compose down && docker-compose up -d",
    "docker:storybook": "start-storybook -p 65200 --ci"
  },
  "devDependencies": {
    "lerna": "3.17.0",
    "husky": "3.0.7"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lerna run lint",
      "pre-push": "lerna run test"
    }
  }
}
