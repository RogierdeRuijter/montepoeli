{
  "name": "montepouli",
  "version": "4.4.2",
  "license": "MIT",
  "private": true,
  "scripts": {
    "install-sub-modules": "lerna run install-node-modules --parallel",
    "install-node-modules": "yarn install",
    "build:client": "docker build client -t montepouli_client:latest -f client/Dockerfile.prod --pull",
    "build:e2e-client": "docker build -f client/Dockerfile.configured client -t montepouli_client:e2e --build-arg CLIENT_BASE_IMAGE_NAME=montepouli_client --build-arg CLIENT_BASE_IMAGE_TAG=latest --build-arg CLIENT_TYPE=e2e",
    "build:server": "docker build server -t montepouli_server:latest -f server/Dockerfile.prod",
    "build-app": "npm run build:client && npm run build:server",
    "build-e2e-app": "npm run build:client && npm run build:e2e-client && npm run build:server",
    "build:e2e-environment": "docker-compose -f docker-compose-e2e.yml build",
    "pull:e2e-environment": "docker-compose -f docker-compose-e2e.yml pull --ignore-pull-failures || true",
    "restart:e2e-db": "docker-compose -f docker-compose-e2e.yml up --force-recreate -d mongodb-e2e",
    "start": "npm run docker-compose-rebuild",
    "start:e2e-environment-base": "(npm run build:e2e-environment && npm run pull:e2e-environment) && npm run restart:e2e-db && docker-compose -f docker-compose-e2e.yml up",
    "start:e2e": "npm run build-e2e-app && (npm run start:e2e-environment-base -- -d)",
    "start:e2e-environment-build-server": "npm run start:e2e-environment-base -- --abort-on-container-exit",
    "start:e2e-tests": "docker-compose -f docker-compose-e2e.yml build e2e-tests && docker-compose -f docker-compose-e2e.yml up -d e2e-tests",
    "stop": "docker-compose down",
    "stop:e2e": "docker-compose -f docker-compose-e2e.yml down",
    "restart:e2e": "yarn stop:e2e && sleep 5 && yarn start:e2e",
    "docker-compose-rebuild": "docker-compose build --parallel && docker-compose down && docker-compose up -d",
    "docker-compose-rebuild-no-cache": "docker-compose build --no-cache && docker-compose down && docker-compose up -d",
    "update-with-master": "CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD) && git checkout master && git pull && git checkout $CURRENT_BRANCH && git merge master"
  },
  "devDependencies": {
    "@commitlint/cli": "8.3.5",
    "@commitlint/config-conventional": "8.3.4",
    "@semantic-release/changelog": "5.0.0",
    "@semantic-release/commit-analyzer": "8.0.1",
    "@semantic-release/git": "9.0.0",
    "@semantic-release/npm": "7.0.4",
    "@semantic-release/release-notes-generator": "9.0.1",
    "husky": "4.2.3",
    "lerna": "3.20.2",
    "semantic-release": "17.0.4"
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "pre-commit": "lerna run --parallel lint",
      "post-commit": "yarn update-with-master",
      "pre-push": "lerna run --parallel test && lerna run --parallel build:pre-push",
      "post-merge": "yarn install-sub-modules"
    }
  }
}
